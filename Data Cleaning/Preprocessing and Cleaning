{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "fd6c2be3-8e8b-4a29-bc0f-ae373acfea0e",
   "metadata": {
    "tags": []
   },
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "import datetime as dt\n",
    "from scipy import stats\n",
    "import folium\n",
    "import geopandas as gpd\n",
    "from geopy.geocoders import Nominatim\n",
    "from sklearn.cluster import DBSCAN \n",
    "import json\n",
    "import re"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ebdedd39-505e-477b-ac18-3ab7b57b31f2",
   "metadata": {},
   "source": [
    "# Preprocessing"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b97238d9-d877-4a29-b4af-464fdb5e4acc",
   "metadata": {},
   "source": [
    "## Data Cleaning\n",
    "\n",
    "1. Check duplicates: None\n",
    "2. Filtering\n",
    "   - Drop rows where longitude/latitude cannot be impued\n",
    "3. Sanity Checks\n",
    "4. Imputations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "e26b5fc0-b428-4608-8322-28cd02f9584a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CRASH DATE</th>\n",
       "      <th>CRASH TIME</th>\n",
       "      <th>BOROUGH</th>\n",
       "      <th>ZIP CODE</th>\n",
       "      <th>LATITUDE</th>\n",
       "      <th>LONGITUDE</th>\n",
       "      <th>LOCATION</th>\n",
       "      <th>ON STREET NAME</th>\n",
       "      <th>CROSS STREET NAME</th>\n",
       "      <th>OFF STREET NAME</th>\n",
       "      <th>...</th>\n",
       "      <th>CONTRIBUTING FACTOR VEHICLE 2</th>\n",
       "      <th>CONTRIBUTING FACTOR VEHICLE 3</th>\n",
       "      <th>CONTRIBUTING FACTOR VEHICLE 4</th>\n",
       "      <th>CONTRIBUTING FACTOR VEHICLE 5</th>\n",
       "      <th>COLLISION_ID</th>\n",
       "      <th>VEHICLE TYPE CODE 1</th>\n",
       "      <th>VEHICLE TYPE CODE 2</th>\n",
       "      <th>VEHICLE TYPE CODE 3</th>\n",
       "      <th>VEHICLE TYPE CODE 4</th>\n",
       "      <th>VEHICLE TYPE CODE 5</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2021-09-11</td>\n",
       "      <td>2:39</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>WHITESTONE EXPRESSWAY</td>\n",
       "      <td>20 AVENUE</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>Unspecified</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4455765</td>\n",
       "      <td>Sedan</td>\n",
       "      <td>Sedan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2022-03-26</td>\n",
       "      <td>11:45</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>QUEENSBORO BRIDGE UPPER</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4513547</td>\n",
       "      <td>Sedan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2022-06-29</td>\n",
       "      <td>6:55</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>THROGS NECK BRIDGE</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>Unspecified</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4541903</td>\n",
       "      <td>Sedan</td>\n",
       "      <td>Pick-up Truck</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2021-09-11</td>\n",
       "      <td>9:35</td>\n",
       "      <td>BROOKLYN</td>\n",
       "      <td>11208</td>\n",
       "      <td>40.667202</td>\n",
       "      <td>-73.866500</td>\n",
       "      <td>(40.667202, -73.8665)</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1211      LORING AVENUE</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4456314</td>\n",
       "      <td>Sedan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2021-12-14</td>\n",
       "      <td>8:13</td>\n",
       "      <td>BROOKLYN</td>\n",
       "      <td>11233</td>\n",
       "      <td>40.683304</td>\n",
       "      <td>-73.917274</td>\n",
       "      <td>(40.683304, -73.917274)</td>\n",
       "      <td>SARATOGA AVENUE</td>\n",
       "      <td>DECATUR STREET</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4486609</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 29 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  CRASH DATE CRASH TIME   BOROUGH ZIP CODE   LATITUDE  LONGITUDE  \\\n",
       "0 2021-09-11       2:39       NaN      NaN        NaN        NaN   \n",
       "1 2022-03-26      11:45       NaN      NaN        NaN        NaN   \n",
       "2 2022-06-29       6:55       NaN      NaN        NaN        NaN   \n",
       "3 2021-09-11       9:35  BROOKLYN    11208  40.667202 -73.866500   \n",
       "4 2021-12-14       8:13  BROOKLYN    11233  40.683304 -73.917274   \n",
       "\n",
       "                  LOCATION           ON STREET NAME CROSS STREET NAME  \\\n",
       "0                      NaN    WHITESTONE EXPRESSWAY         20 AVENUE   \n",
       "1                      NaN  QUEENSBORO BRIDGE UPPER               NaN   \n",
       "2                      NaN       THROGS NECK BRIDGE               NaN   \n",
       "3    (40.667202, -73.8665)                      NaN               NaN   \n",
       "4  (40.683304, -73.917274)          SARATOGA AVENUE    DECATUR STREET   \n",
       "\n",
       "           OFF STREET NAME  ...  CONTRIBUTING FACTOR VEHICLE 2  \\\n",
       "0                      NaN  ...                    Unspecified   \n",
       "1                      NaN  ...                            NaN   \n",
       "2                      NaN  ...                    Unspecified   \n",
       "3  1211      LORING AVENUE  ...                            NaN   \n",
       "4                      NaN  ...                            NaN   \n",
       "\n",
       "   CONTRIBUTING FACTOR VEHICLE 3  CONTRIBUTING FACTOR VEHICLE 4  \\\n",
       "0                            NaN                            NaN   \n",
       "1                            NaN                            NaN   \n",
       "2                            NaN                            NaN   \n",
       "3                            NaN                            NaN   \n",
       "4                            NaN                            NaN   \n",
       "\n",
       "   CONTRIBUTING FACTOR VEHICLE 5  COLLISION_ID  VEHICLE TYPE CODE 1  \\\n",
       "0                            NaN       4455765                Sedan   \n",
       "1                            NaN       4513547                Sedan   \n",
       "2                            NaN       4541903                Sedan   \n",
       "3                            NaN       4456314                Sedan   \n",
       "4                            NaN       4486609                  NaN   \n",
       "\n",
       "   VEHICLE TYPE CODE 2  VEHICLE TYPE CODE 3 VEHICLE TYPE CODE 4  \\\n",
       "0                Sedan                  NaN                 NaN   \n",
       "1                  NaN                  NaN                 NaN   \n",
       "2        Pick-up Truck                  NaN                 NaN   \n",
       "3                  NaN                  NaN                 NaN   \n",
       "4                  NaN                  NaN                 NaN   \n",
       "\n",
       "  VEHICLE TYPE CODE 5  \n",
       "0                 NaN  \n",
       "1                 NaN  \n",
       "2                 NaN  \n",
       "3                 NaN  \n",
       "4                 NaN  \n",
       "\n",
       "[5 rows x 29 columns]"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Dataset has mixed types\n",
    "full_data = pd.read_csv(\"Motor_Vehicle_Collisions_-_Crashes_20240418.csv\", low_memory=False, parse_dates=['CRASH DATE'])\n",
    "full_data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "e42cabb0-154e-43f7-89a3-b47cc55a4864",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(2081081, 29)"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "full_data.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "715c5b03-720c-488c-a301-6e3224ea78d6",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CRASH DATE                       datetime64[ns]\n",
       "CRASH TIME                               object\n",
       "BOROUGH                                  object\n",
       "ZIP CODE                                 object\n",
       "LATITUDE                                float64\n",
       "LONGITUDE                               float64\n",
       "LOCATION                                 object\n",
       "ON STREET NAME                           object\n",
       "CROSS STREET NAME                        object\n",
       "OFF STREET NAME                          object\n",
       "NUMBER OF PERSONS INJURED               float64\n",
       "NUMBER OF PERSONS KILLED                float64\n",
       "NUMBER OF PEDESTRIANS INJURED             int64\n",
       "NUMBER OF PEDESTRIANS KILLED              int64\n",
       "NUMBER OF CYCLIST INJURED                 int64\n",
       "NUMBER OF CYCLIST KILLED                  int64\n",
       "NUMBER OF MOTORIST INJURED                int64\n",
       "NUMBER OF MOTORIST KILLED                 int64\n",
       "CONTRIBUTING FACTOR VEHICLE 1            object\n",
       "CONTRIBUTING FACTOR VEHICLE 2            object\n",
       "CONTRIBUTING FACTOR VEHICLE 3            object\n",
       "CONTRIBUTING FACTOR VEHICLE 4            object\n",
       "CONTRIBUTING FACTOR VEHICLE 5            object\n",
       "COLLISION_ID                              int64\n",
       "VEHICLE TYPE CODE 1                      object\n",
       "VEHICLE TYPE CODE 2                      object\n",
       "VEHICLE TYPE CODE 3                      object\n",
       "VEHICLE TYPE CODE 4                      object\n",
       "VEHICLE TYPE CODE 5                      object\n",
       "dtype: object"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "full_data.dtypes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "bbd70732-f595-4c9a-b827-9d2bfacfbf06",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "ZIP CODE 42\n",
      "-42\n",
      "ZIP CODE 0\n",
      "ON STREET NAME 15\n",
      "-15\n",
      "ON STREET NAME 0\n",
      "CROSS STREET NAME 17\n",
      "-17\n",
      "CROSS STREET NAME 0\n",
      "OFF STREET NAME 29\n",
      "-29\n",
      "OFF STREET NAME 0\n"
     ]
    }
   ],
   "source": [
    "### Cleaning unexpected NaNs\n",
    "for col in full_data.columns:\n",
    "    if full_data[col].dtype == 'O':\n",
    "        if sum(full_data[col].apply(lambda x: x.isspace() if type(x) == str else False)) > 1:\n",
    "            print(col, sum(full_data[col].apply(lambda x: x.isspace() if type(x) == str else False)))\n",
    "            mask = full_data[col].replace(r'^\\s*$', np.nan, regex=True, inplace=False)\n",
    "            print(full_data[col].isnull().sum() - mask.isnull().sum())\n",
    "            full_data[col] = mask\n",
    "            print(col, sum(full_data[col].apply(lambda x: x.isspace() if type(x) == str else False)))\n",
    "        full_data[col] = full_data[col].str.strip()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "c850a959-8077-4874-b313-7d75cce81c37",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CRASH DATE : 0\n",
      "0.0\n",
      "CRASH TIME : 0\n",
      "0.0\n",
      "BOROUGH : 647518\n",
      "31.114502510954644\n",
      "ZIP CODE : 647811\n",
      "31.128581732282406\n",
      "LATITUDE : 234016\n",
      "11.24492511343864\n",
      "LONGITUDE : 234016\n",
      "11.24492511343864\n",
      "LOCATION : 234016\n",
      "11.24492511343864\n",
      "ON STREET NAME : 442212\n",
      "21.24914887983697\n",
      "CROSS STREET NAME : 787371\n",
      "37.834711863690075\n",
      "OFF STREET NAME : 1731286\n",
      "83.19166817629876\n",
      "NUMBER OF PERSONS INJURED : 18\n",
      "0.000864935098633835\n",
      "NUMBER OF PERSONS KILLED : 31\n",
      "0.0014896104476471604\n",
      "NUMBER OF PEDESTRIANS INJURED : 0\n",
      "0.0\n",
      "NUMBER OF PEDESTRIANS KILLED : 0\n",
      "0.0\n",
      "NUMBER OF CYCLIST INJURED : 0\n",
      "0.0\n",
      "NUMBER OF CYCLIST KILLED : 0\n",
      "0.0\n",
      "NUMBER OF MOTORIST INJURED : 0\n",
      "0.0\n",
      "NUMBER OF MOTORIST KILLED : 0\n",
      "0.0\n",
      "CONTRIBUTING FACTOR VEHICLE 1 : 6837\n",
      "0.328531181631085\n",
      "CONTRIBUTING FACTOR VEHICLE 2 : 323067\n",
      "15.523999306129843\n",
      "CONTRIBUTING FACTOR VEHICLE 3 : 1932289\n",
      "92.85025426689302\n",
      "CONTRIBUTING FACTOR VEHICLE 4 : 2047465\n",
      "98.38468565135139\n",
      "CONTRIBUTING FACTOR VEHICLE 5 : 2071963\n",
      "99.56186232059204\n",
      "COLLISION_ID : 0\n",
      "0.0\n",
      "VEHICLE TYPE CODE 1 : 13788\n",
      "0.6625402855535176\n",
      "VEHICLE TYPE CODE 2 : 398574\n",
      "19.152257889049007\n",
      "VEHICLE TYPE CODE 3 : 1937695\n",
      "93.11002310818272\n",
      "VEHICLE TYPE CODE 4 : 2048634\n",
      "98.44085838081267\n",
      "VEHICLE TYPE CODE 5 : 2072242\n",
      "99.57526881462087\n"
     ]
    }
   ],
   "source": [
    "for col in full_data.columns:\n",
    "    print(col, \":\", sum(full_data[col].isna()))\n",
    "    print(sum(full_data[col].isna())*100/full_data.shape[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "e051e5de-4581-4a50-bd69-4cfdc3987e30",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LATITUDE</th>\n",
       "      <th>LONGITUDE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1.847065e+06</td>\n",
       "      <td>1.847065e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>4.062739e+01</td>\n",
       "      <td>-7.375157e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1.983709e+00</td>\n",
       "      <td>3.728332e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>-2.013600e+02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>4.066778e+01</td>\n",
       "      <td>-7.397483e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>4.072079e+01</td>\n",
       "      <td>-7.392726e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>4.076961e+01</td>\n",
       "      <td>-7.386673e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>4.334444e+01</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           LATITUDE     LONGITUDE\n",
       "count  1.847065e+06  1.847065e+06\n",
       "mean   4.062739e+01 -7.375157e+01\n",
       "std    1.983709e+00  3.728332e+00\n",
       "min    0.000000e+00 -2.013600e+02\n",
       "25%    4.066778e+01 -7.397483e+01\n",
       "50%    4.072079e+01 -7.392726e+01\n",
       "75%    4.076961e+01 -7.386673e+01\n",
       "max    4.334444e+01  0.000000e+00"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "full_data[['LATITUDE', 'LONGITUDE']].describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f2a45346-0392-4d7a-970a-c261cb252e66",
   "metadata": {},
   "source": [
    "### Filter conditions"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "cd4bde84-8007-4c43-b565-b5f528bee519",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(2030, 29)\n"
     ]
    }
   ],
   "source": [
    "# filter condition 1 : longitude and latitude are 0 and no on/CROSS street name\n",
    "cond = (full_data['LATITUDE'] == 0) & (full_data['LONGITUDE'] == 0) & ((full_data['ON STREET NAME'].isnull()) | full_data['CROSS STREET NAME'].isnull())\n",
    "\n",
    "full_data[cond]['OFF STREET NAME'].isnull().sum()\n",
    "print(full_data[cond].shape)\n",
    "only_offstreet = full_data[cond]\n",
    "data_filtered = full_data[~cond].copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "ec9bce50-3d6a-4b4d-b575-78982b89cdc2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(93061, 29)\n"
     ]
    }
   ],
   "source": [
    "# filter condition 2: longitude and latitude are nan and no/CROSS on street name\n",
    "cond2 = (data_filtered['LATITUDE'].isnull()) & (data_filtered['LONGITUDE'].isnull()) & (data_filtered['ON STREET NAME'].isnull() | data_filtered['CROSS STREET NAME'].isnull())\n",
    "\n",
    "print(data_filtered[cond2].shape)\n",
    "\n",
    "data_filtered = data_filtered[~cond2].copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "8e07c9fd-9964-4fbc-b78a-49dae3c8406c",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CRASH DATE : 0\n",
      "0.0\n",
      "CRASH TIME : 0\n",
      "0.0\n",
      "BOROUGH : 560341\n",
      "28.21469393098656\n",
      "ZIP CODE : 560613\n",
      "28.228389871046684\n",
      "LATITUDE : 140955\n",
      "7.097467761670502\n",
      "LONGITUDE : 140955\n",
      "7.097467761670502\n",
      "LOCATION : 140955\n",
      "7.097467761670502\n",
      "ON STREET NAME : 384695\n",
      "19.37043993172171\n",
      "CROSS STREET NAME : 692588\n",
      "34.873690199849946\n",
      "OFF STREET NAME : 1663373\n",
      "83.75535627067609\n",
      "NUMBER OF PERSONS INJURED : 16\n",
      "0.0008056435329483029\n",
      "NUMBER OF PERSONS KILLED : 29\n",
      "0.001460228903468799\n",
      "NUMBER OF PEDESTRIANS INJURED : 0\n",
      "0.0\n",
      "NUMBER OF PEDESTRIANS KILLED : 0\n",
      "0.0\n",
      "NUMBER OF CYCLIST INJURED : 0\n",
      "0.0\n",
      "NUMBER OF CYCLIST KILLED : 0\n",
      "0.0\n",
      "NUMBER OF MOTORIST INJURED : 0\n",
      "0.0\n",
      "NUMBER OF MOTORIST KILLED : 0\n",
      "0.0\n",
      "CONTRIBUTING FACTOR VEHICLE 1 : 6624\n",
      "0.3335364226405974\n",
      "CONTRIBUTING FACTOR VEHICLE 2 : 309411\n",
      "15.579685698316709\n",
      "CONTRIBUTING FACTOR VEHICLE 3 : 1846897\n",
      "92.99628900447635\n",
      "CONTRIBUTING FACTOR VEHICLE 4 : 1954499\n",
      "98.41434246899532\n",
      "CONTRIBUTING FACTOR VEHICLE 5 : 1977372\n",
      "99.56606025206572\n",
      "COLLISION_ID : 0\n",
      "0.0\n",
      "VEHICLE TYPE CODE 1 : 13447\n",
      "0.6770930367222393\n",
      "VEHICLE TYPE CODE 2 : 382712\n",
      "19.27059048635693\n",
      "VEHICLE TYPE CODE 3 : 1851969\n",
      "93.25167800442097\n",
      "VEHICLE TYPE CODE 4 : 1955594\n",
      "98.46947869828146\n",
      "VEHICLE TYPE CODE 5 : 1977632\n",
      "99.57915195947614\n"
     ]
    }
   ],
   "source": [
    "for col in data_filtered.columns:\n",
    "    print(col, \":\", sum(data_filtered[col].isna()))\n",
    "    print(sum(data_filtered[col].isna())*100/data_filtered.shape[0])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e2033d53-47ea-4ebb-8e68-7287adc31fbd",
   "metadata": {},
   "source": [
    "### Imputations"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "66080f73-5240-48a6-acc6-6fb8d8287572",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "pre:  140955\n",
      "post:  30311\n"
     ]
    }
   ],
   "source": [
    "# populate the location for rows that have on and cross but no location\n",
    "df = data_filtered\n",
    "temp_nm = df[df['ON STREET NAME'].notnull() & df['CROSS STREET NAME'].notnull() & df['LOCATION'].notnull()]\n",
    "temp_nm = temp_nm[~temp_nm[['LOCATION', 'ON STREET NAME', 'CROSS STREET NAME']].duplicated()] # No ambiguity about location\n",
    "\n",
    "pop_key = { (row['ON STREET NAME'], row['CROSS STREET NAME']): row['LOCATION'] for index, row in temp_nm.iterrows() }\n",
    "\n",
    "# Use key to populate df\n",
    "\n",
    "print(\"pre: \", data_filtered['LOCATION'].isnull().sum())\n",
    "\n",
    "data_filtered['LOCATION'] = data_filtered.apply(\n",
    "    lambda row: pop_key.get((row['ON STREET NAME'], row['CROSS STREET NAME'])) if pd.isna(row['LOCATION']) else row['LOCATION'], \n",
    "    axis=1\n",
    ")\n",
    "\n",
    "print(\"post: \", data_filtered['LOCATION'].isnull().sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "c39352d6-0f95-4d62-9bdb-e5ed8eb95a1e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "110644"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "140955-30311"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "1a114ee3-11ea-4685-9d01-562d022264e4",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "pre 00:  9911\n",
      "post 00:  8220\n"
     ]
    }
   ],
   "source": [
    "print(\"pre 00: \", data_filtered[data_filtered['LOCATION'] == '(0.0, 0.0)'].shape[0])\n",
    "\n",
    "data_filtered['LOCATION'] = data_filtered.apply(\n",
    "    lambda row: pop_key.get((row['ON STREET NAME'], row['CROSS STREET NAME'])) if row['LOCATION'] == '(0.0, 0.0)' else row['LOCATION'], \n",
    "    axis=1\n",
    ")\n",
    "\n",
    "print(\"post 00: \", data_filtered[data_filtered['LOCATION'] == '(0.0, 0.0)'].shape[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "36a6edf0-3d3d-4996-ad22-d01fcb2d6bd1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1691"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "9911-8220 "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "1fecd46f-302f-4c81-9449-84a83fa1630e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(38531, 29)"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## Impute location based on place\n",
    "# Isolate columns that have either location null or 0,0\n",
    "\n",
    "data_filtered[(data_filtered['LOCATION'] == '(0.0, 0.0)') | data_filtered['LOCATION'].isnull()].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "d70e7e93-cf4d-498e-bd35-46a86b27db79",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LATITUDE</th>\n",
       "      <th>LONGITUDE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1.845035e+06</td>\n",
       "      <td>1.845035e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>4.067209e+01</td>\n",
       "      <td>-7.383271e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1.456494e+00</td>\n",
       "      <td>2.815063e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>-2.013600e+02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>4.066795e+01</td>\n",
       "      <td>-7.397489e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>4.072093e+01</td>\n",
       "      <td>-7.392732e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>4.076969e+01</td>\n",
       "      <td>-7.386696e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>4.334444e+01</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           LATITUDE     LONGITUDE\n",
       "count  1.845035e+06  1.845035e+06\n",
       "mean   4.067209e+01 -7.383271e+01\n",
       "std    1.456494e+00  2.815063e+00\n",
       "min    0.000000e+00 -2.013600e+02\n",
       "25%    4.066795e+01 -7.397489e+01\n",
       "50%    4.072093e+01 -7.392732e+01\n",
       "75%    4.076969e+01 -7.386696e+01\n",
       "max    4.334444e+01  0.000000e+00"
      ]
     },
     "execution_count": 26,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_filtered[['LATITUDE', 'LONGITUDE']].describe()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "32c82a33-3b0e-4bc5-a370-c0bbc16b2d95",
   "metadata": {},
   "source": [
    "#### Neonatim"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "208d2b7b-1f00-49fd-8d38-ad47c9a88956",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3839 1735\n"
     ]
    }
   ],
   "source": [
    "geolocator = Nominatim(user_agent=\"geoapiVis\")\n",
    "location_dict = json.load(open(\"location_data.json\"))\n",
    "exception_list = json.load(open(\"exception_data.json\"))\n",
    "print(len(location_dict), len(exception_list))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "7f968826-1d08-4a95-89a6-65958eab5434",
   "metadata": {
    "collapsed": true,
    "jupyter": {
     "outputs_hidden": true
    },
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(38531, 29)"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_filtered[(data_filtered['LOCATION'] == '(0.0, 0.0)') | data_filtered['LOCATION'].isnull()].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "da544ef7-fe6e-4f13-849d-0ea376eee841",
   "metadata": {},
   "outputs": [],
   "source": [
    "strict_lat = [40.45, 40.95]\n",
    "strict_lon = [-73.65, -74.3]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "32b8a371-a45c-4fde-81ed-8e5e1d139cea",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "broadway new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=broadway+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "49 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=49+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "33 st queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=33+st+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "layton avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=layton+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "knapp street new york\n",
      "42 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=42+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "clinton street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=clinton+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "westminister road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=westminister+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "duane road new york\n",
      "33 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=33+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "brighton 6 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=brighton+6+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "97 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=97+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "59 place brooklyn\n",
      "broadway avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=broadway+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "59 street bridge new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=59+street+bridge+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "dixon avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=dixon+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "long island expressway new york\n",
      "willoughby ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=willoughby+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "ring road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=ring+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "columbia street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=columbia+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "station road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=station+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "lawton avenue new york\n",
      "beach 54  street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+54++street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 180 new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+180+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "leonard ave new york\n",
      "43 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=43+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "brighton 4 street new york\n",
      "east 222 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+222+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "238 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=238+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "69 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=69+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 168 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+168+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "166 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=166+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "vandalia avenue brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=vandalia+avenue+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "hicks street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=hicks+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "thomson avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=thomson+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "sheffield avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=sheffield+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "37 road queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=37+road+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "augusta ct queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=augusta+ct+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 162 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+162+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "dahlia avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=dahlia+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "fenton avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=fenton+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "roebling avenue new york\n",
      "timber ridge drive new york\n",
      "knapp street new york\n",
      "hamilton place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=hamilton+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "knapp street new york\n",
      "153 place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=153+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "212 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=212+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "plaza drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=plaza+drive+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "rockland ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=rockland+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "homecrest avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=homecrest+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "leonard avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=leonard+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "olcott street new york\n",
      "rockland avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=rockland+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east lake drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+lake+drive+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "35 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=35+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "38 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=38+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "foster avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=foster+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "albemarle road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=albemarle+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "long island expressway new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=long+island+expressway+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "114 road queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=114+road+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "gunhill new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=gunhill+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "carson street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=carson+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "14 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=14+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 106 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+106+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "35 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=35+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "national street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=national+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "139 place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=139+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "138 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=138+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "caton avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=caton+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "park drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=park+drive+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "randall avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=randall+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 38 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+38+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 70 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+70+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "164 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=164+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 157 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+157+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "230 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=230+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 40 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+40+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "henry hudson new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=henry+hudson+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "60 av queens\n",
      "southern parkway new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=southern+parkway+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "north 6th street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=north+6th+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 119 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+119+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "vandervoort street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=vandervoort+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "107 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=107+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "south avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=south+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 25 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+25+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "5 ave brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=5+ave+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "225 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=225+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "13 pierce street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=13+pierce+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "5 avenue manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=5+avenue+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "39 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=39+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "barkley avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=barkley+avenue+new+york&format=json&limit=1 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x000001492D50E780>, 'Connection to nominatim.openstreetmap.org timed out. (connect timeout=1)'))\n",
      "underhill avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=underhill+avenue+new+york&format=json&limit=1 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x000001492D50FBC0>, 'Connection to nominatim.openstreetmap.org timed out. (connect timeout=1)'))\n",
      "177 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=177+street+queens&format=json&limit=1 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x000001492D535B20>, 'Connection to nominatim.openstreetmap.org timed out. (connect timeout=1)'))\n",
      "east drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+drive+new+york&format=json&limit=1 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x00000149114981D0>, 'Connection to nominatim.openstreetmap.org timed out. (connect timeout=1)'))\n",
      "east 34 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+34+street+manhattan&format=json&limit=1 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x000001492D50D940>, 'Connection to nominatim.openstreetmap.org timed out. (connect timeout=1)'))\n",
      "232 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=232+street+new+york&format=json&limit=1 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x00000149342D4740>, 'Connection to nominatim.openstreetmap.org timed out. (connect timeout=1)'))\n",
      "water street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=water+street+brooklyn&format=json&limit=1 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x00000149037CFA70>, 'Connection to nominatim.openstreetmap.org timed out. (connect timeout=1)'))\n",
      "58 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=58+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "elton street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=elton+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 56 place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+56+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "72 3 place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=72+3+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "124 place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=124+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "meeker ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=meeker+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "macon street new york\n",
      "knapp street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=knapp+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "34 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=34+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "31st new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=31st+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "riviera court new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=riviera+court+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "2 avenue brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=2+avenue+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 101 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+101+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "depot road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=depot+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "w 42 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=w+42+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 153 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+153+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "3 avenue bronx\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=3+avenue+bronx&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "31 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=31+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 106 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+106+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 91 queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+91+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "first avenue manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=first+avenue+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "63 drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=63+drive+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 41 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+41+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "86 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=86+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 138 street bridge new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+138+street+bridge+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 181 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+181+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 39 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+39+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "st pauls ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=st+pauls+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "w loop road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=w+loop+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "55 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=55+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 181 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+181+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "johnson street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=johnson+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "kingsland ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=kingsland+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "40 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=40+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "181 street queens\n",
      "east 182 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+182+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "dexter court new york\n",
      "3 avenue manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=3+avenue+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 69 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+69+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "36 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=36+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "50 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=50+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "rosedale avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=rosedale+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "454 new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=454+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "midland avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=midland+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "dexter court new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=dexter+court+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "debevoise avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=debevoise+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "hangar road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=hangar+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east service road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+service+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 135 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+135+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "80 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=80+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "52 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=52+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "lawton avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=lawton+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "rose avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=rose+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "marginal street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=marginal+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "morris avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=morris+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "maple new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=maple+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "94 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=94+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "forest hill road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=forest+hill+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "edgewater street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=edgewater+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "lincoln avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=lincoln+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "herkimer street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=herkimer+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "perimeter road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=perimeter+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "rutgers park new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=rutgers+park+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "w 140 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=w+140+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "72 new york\n",
      "west 179 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+179+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "48 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=48+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 125 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+125+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 38 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+38+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 38 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+38+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 173 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+173+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "broadway street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=broadway+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "watersedge drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=watersedge+drive+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "158 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=158+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "w 23 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=w+23+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "rogers new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=rogers+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "58 road queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=58+road+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "31 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=31+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "156 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=156+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "manor road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=manor+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "jackie robinson parkway new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=jackie+robinson+parkway+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "plumb 2 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=plumb+2+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "harding avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=harding+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "83 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=83+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "st. peters ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=st.+peters+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "4 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=4+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "165 street bronx\n",
      "120 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=120+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "194 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=194+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "w 37 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=w+37+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 21 new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+21+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "w 38 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=w+38+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "wadsworth avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=wadsworth+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "hillside avenue new york\n",
      "4 avenue brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=4+avenue+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 7 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+7+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "61 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=61+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "216 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=216+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "murdock road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=murdock+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "107 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=107+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "south ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=south+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 94 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+94+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "79 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=79+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "surf avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=surf+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 181 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+181+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 14 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+14+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "27 ave queens\n",
      "242 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=242+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "47 street manhattan\n",
      "104 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=104+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "48 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=48+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "north bridge street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=north+bridge+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "150 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=150+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "39 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=39+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "201 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=201+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 239 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+239+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 233 street bronx\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+233+street+bronx&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "bushwick avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bushwick+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "40 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=40+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "51 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=51+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "glenmore ave new york\n",
      "13 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=13+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 52 brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+52+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 32 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+32+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "meeker avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=meeker+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "first ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=first+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "57 avenue queens\n",
      "park lane new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=park+lane+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "102 cross drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=102+cross+drive+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "172 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=172+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "forest parkway new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=forest+parkway+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "linden avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=linden+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "65 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=65+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "hillside avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=hillside+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 254 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+254+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "164 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=164+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "295 south new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=295+south+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "182 place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=182+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "197 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=197+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "washington avenue brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=washington+avenue+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "84 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=84+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "marsden street new york\n",
      "beach 62 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+62+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "haven avenue new york\n",
      "thompson avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=thompson+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "seneca street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=seneca+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "96 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=96+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 172 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+172+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 167 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+167+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "865 new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=865+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "grove street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=grove+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "grove st new york\n",
      "avenue of america new york\n",
      "page avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=page+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "114 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=114+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "35 ave queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=35+ave+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "exit 7 new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=exit+7+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 177 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+177+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "50 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=50+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "colden street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=colden+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "valentine ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=valentine+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 87 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+87+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 106 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+106+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 252 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+252+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "perimeter rd queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=perimeter+rd+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "north 5th street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=north+5th+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "jackie robinson pkwy new york\n",
      "morrison avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=morrison+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "milford drive new york\n",
      "boardwalk new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=boardwalk+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "underhill  road new york\n",
      "perry avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=perry+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "255 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=255+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "158 st new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=158+st+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "112 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=112+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "houseman avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=houseman+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "162 street queens\n",
      "56 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=56+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 43 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+43+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "jackie robinson pkwy new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=jackie+robinson+pkwy+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "ely avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=ely+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 222 street bronx\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+222+street+bronx&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "adams avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=adams+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "western avenue new york\n",
      "223 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=223+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "w 233 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=w+233+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "kent avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=kent+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 80 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+80+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "e loop road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=e+loop+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "melrose avenue new york\n",
      "lois avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=lois+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "edgewood avenue new york\n",
      "w 145 street & lenox ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=w+145+street+%26+lenox+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 65 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+65+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "patterson avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=patterson+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beverly street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beverly+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "sound view avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=sound+view+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "33 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=33+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "corbin avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=corbin+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "tompkins street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=tompkins+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "lois lane new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=lois+lane+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "rutland road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=rutland+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "216 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=216+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "bronx river parkway north new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bronx+river+parkway+north+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "douglas rd queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=douglas+rd+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 156 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+156+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 177 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+177+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "138 place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=138+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "lamont avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=lamont+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "north 4th street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=north+4th+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "82 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=82+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "state road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=state+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "130 furman street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=130+furman+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "central rd new york\n",
      "182 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=182+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "college road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=college+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "72 drive queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=72+drive+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "albany avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=albany+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "26 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=26+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "44 north shore road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=44+north+shore+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "palmer avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=palmer+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "8 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=8+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "50 avenue queens\n",
      "east 183 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+183+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 14 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+14+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "49 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=49+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "23 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=23+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "127 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=127+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "53th st queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=53th+st+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "crescent court new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=crescent+court+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "new york ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=new+york+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "176 street queens\n",
      "reservoir avenue new york\n",
      "maurice avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=maurice+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "5 ave queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=5+ave+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+drive+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "23 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=23+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "st peters ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=st+peters+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "memphis street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=memphis+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "79 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=79+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "47 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=47+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "3 avenue bridge new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=3+avenue+bridge+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 56 drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+56+drive+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "bay 32  street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bay+32++street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 91 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+91+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "edgemere ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=edgemere+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "rust avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=rust+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 71 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+71+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 175 street bronx\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+175+street+bronx&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "60-01d new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=60-01d+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 174 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+174+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 131 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+131+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "wes 145 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=wes+145+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "bay 20 brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bay+20+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "35th street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=35th+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "50 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=50+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "82 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=82+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "first avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=first+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "dorchester road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=dorchester+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "gateway drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=gateway+drive+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "westervelt avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=westervelt+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "livingston street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=livingston+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "tilden avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=tilden+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "176 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=176+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "w 24 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=w+24+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "longfellow avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=longfellow+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "newtown ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=newtown+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "edgewood avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=edgewood+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 198 new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+198+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "palmetto street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=palmetto+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 159 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+159+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "rome avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=rome+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 73 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+73+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east rd new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+rd+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "43 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=43+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 13 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+13+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "leland avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=leland+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "mathews avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=mathews+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 236 street bronx\n",
      "184 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=184+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "62 dr queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=62+dr+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "exit 21b new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=exit+21b+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "3 avenue brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=3+avenue+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "32 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=32+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 180 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+180+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "highland boulevard east new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=highland+boulevard+east+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "100 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=100+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "192 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=192+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "autumn lane brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=autumn+lane+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "224 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=224+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 76 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+76+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "bailey ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bailey+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "bushwick ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bushwick+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "water street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=water+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "stanley avenue new york\n",
      "lakeville road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=lakeville+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "anthony avenue new york\n",
      "south bridge street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=south+bridge+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 130 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+130+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "176 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=176+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "sheridan street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=sheridan+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "149 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=149+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "cedar avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=cedar+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "st anns ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=st+anns+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "188 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=188+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 158 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+158+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "28 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=28+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 16 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+16+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 223 street bronx\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+223+street+bronx&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "campus road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=campus+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "linden street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=linden+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "184 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=184+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "stanley ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=stanley+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "hoyt avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=hoyt+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "144 street queens\n",
      "commerce avenue new york\n",
      "fifth ave new york\n",
      "173 street bronx\n",
      "1440 street new york\n",
      "189 street queens\n",
      "110 avenue queens\n",
      "chatterton avenue new york\n",
      "156 st new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=156+st+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "empire blvd new york\n",
      "farragut road new york\n",
      "Found\n",
      "11 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=11+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 75 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+75+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "bailey avenue new york\n",
      "east 152 street new york\n",
      "Found\n",
      "reservoir avenue new york\n",
      "Found\n",
      "avery avenue new york\n",
      "belt new york\n",
      "58 street queens\n",
      "floyd street new york\n",
      "veterans circle new york\n",
      "69 place queens\n",
      "39 ave queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=39+ave+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "linden new york\n",
      "decatur street new york\n",
      "Found\n",
      "borden new york\n",
      "west 111 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+111+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "69 place new york\n",
      "Found\n",
      "west 59 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+59+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "2430 new york\n",
      "251 east 161 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=251+east+161+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "w 58 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=w+58+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "school street new york\n",
      "onderdonk avenue new york\n",
      "Found\n",
      "west 29 street manhattan\n",
      "hillcrest street new york\n",
      "54 ave queens\n",
      "east 129 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+129+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "clarkson avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=clarkson+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "e 57 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=e+57+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "butler street new york\n",
      "marina road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=marina+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "summit street new york\n",
      "beach 36 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+36+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "126 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=126+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "202 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=202+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 18 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+18+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "farrington avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=farrington+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "93 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=93+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "26 ave queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=26+ave+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 12 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+12+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "hanover square new york\n",
      "59 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=59+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "skillman street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=skillman+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "160 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=160+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "baxter street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=baxter+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 77 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+77+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "hull avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=hull+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "central road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=central+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "108 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=108+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "186 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=186+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "206 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=206+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 182 new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+182+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "129 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=129+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "90 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=90+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 42 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+42+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "hooper street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=hooper+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "552 new york\n",
      "garfield avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=garfield+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "108 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=108+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 6 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+6+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "monroe avenue new york\n",
      "149 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=149+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 178 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+178+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "186 lane new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=186+lane+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "51 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=51+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "lafayette new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=lafayette+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west loop road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+loop+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "7 ave brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=7+ave+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "morningside ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=morningside+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "brown place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=brown+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "165 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=165+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "236 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=236+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "202 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=202+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "college avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=college+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "perimeter rd new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=perimeter+rd+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "w 47 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=w+47+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "ellsworth ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=ellsworth+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "113 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=113+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "linden place new york\n",
      "Found\n",
      "east 179 new york\n",
      "w 53 st manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=w+53+st+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "159 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=159+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 132 street manhattan\n",
      "east 175 new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+175+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "center street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=center+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "hunter avenue new york\n",
      "169 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=169+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "greenfield avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=greenfield+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "99 street queens\n",
      "south road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=south+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "warwick street new york\n",
      "81 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=81+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "jackson street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=jackson+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "tanglewood drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=tanglewood+drive+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "46 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=46+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "69 place queens\n",
      "olmstead drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=olmstead+drive+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "125 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=125+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "stewart st new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=stewart+st+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "johnson avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=johnson+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "25 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=25+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "217 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=217+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "154 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=154+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "totten street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=totten+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 61 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+61+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "256 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=256+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "webb avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=webb+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "lincoln blvd new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=lincoln+blvd+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 52 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+52+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "169 place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=169+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "glenmore ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=glenmore+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "bay 7 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bay+7+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "pacific street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=pacific+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "233 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=233+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "kosciusko bridge new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=kosciusko+bridge+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "est 42 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=est+42+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "center 109 drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=center+109+drive+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "87 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=87+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "148 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=148+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "roebling new york\n",
      "120 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=120+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "locke street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=locke+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "212 sreet new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=212+sreet+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "nelson street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=nelson+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "28 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=28+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "189 street bronx\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=189+street+bronx&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 79 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+79+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "47 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=47+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "1 place manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=1+place+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "st james avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=st+james+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "pratt avenue new york\n",
      "180 street bronx\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=180+street+bronx&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "w 43 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=w+43+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "clinton ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=clinton+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "dickinson avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=dickinson+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "254 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=254+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "brighton 8 court new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=brighton+8+court+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "w 50 st manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=w+50+st+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "hillcrest road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=hillcrest+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "75 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=75+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "hicks st new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=hicks+st+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "163 street bronx\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=163+street+bronx&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "maurice ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=maurice+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "gold st new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=gold+st+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 62 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+62+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 184 new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+184+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "greene st new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=greene+st+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "cedar street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=cedar+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 242 street bronx\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+242+street+bronx&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west lake drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+lake+drive+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "green ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=green+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "jay street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=jay+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "st james place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=st+james+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "hollywood avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=hollywood+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "ave of americas new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=ave+of+americas+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "w 51 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=w+51+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "watson avenue new york\n",
      "montgomery street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=montgomery+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 58 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+58+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "elizabeth avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=elizabeth+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "center avenue new york\n",
      "bay 50 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bay+50+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "153 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=153+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "96 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=96+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "3 ave manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=3+ave+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 57 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+57+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "bergen avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bergen+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "49 place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=49+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "shell road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=shell+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "briar place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=briar+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "timber ridge drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=timber+ridge+drive+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "lamont street new york\n",
      "delancey st south new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=delancey+st+south+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "aqueduct rd new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=aqueduct+rd+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "235 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=235+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 157 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+157+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "83 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=83+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "lane avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=lane+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "20 ave brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=20+ave+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 153 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+153+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "webster new york\n",
      "east 179 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+179+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 240 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+240+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "thompson street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=thompson+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "lakeview street new york\n",
      "west 150 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+150+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "67 dr queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=67+dr+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "linden ave new york\n",
      "68 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=68+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "willoughby avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=willoughby+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "north railroad avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=north+railroad+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "169 street bronx\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=169+street+bronx&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "w 259 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=w+259+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "howard avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=howard+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "23 ave queens\n",
      "119 road queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=119+road+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west. 239 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west.+239+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "crosby avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=crosby+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "van dam street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=van+dam+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "cornell avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=cornell+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "stadium place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=stadium+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "45th street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=45th+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "94 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=94+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 18  street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+18++street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 230 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+230+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "parkside place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=parkside+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "58 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=58+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "187 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=187+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "windermere road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=windermere+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "e 50 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=e+50+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "commerce avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=commerce+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "247 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=247+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "140 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=140+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "62 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=62+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "259 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=259+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "45 ave queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=45+ave+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 50 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+50+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "lily pond road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=lily+pond+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 197 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+197+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "riis park new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=riis+park+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 53 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+53+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "woodlawn avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=woodlawn+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "independence ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=independence+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "sycamore street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=sycamore+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 58 st manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+58+st+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "17 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=17+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "205 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=205+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "pinehurst avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=pinehurst+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "smith street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=smith+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "18 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=18+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "bridgewater court new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bridgewater+court+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "avenue of americas new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=avenue+of+americas+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 51 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+51+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "38 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=38+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "70 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=70+street+brooklyn&format=json&limit=1 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x00000149037CD910>, 'Connection to nominatim.openstreetmap.org timed out. (connect timeout=1)'))\n",
      "north end avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=north+end+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "hazen street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=hazen+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 242 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+242+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "214 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=214+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "224 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=224+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "wes 77 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=wes+77+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "first ave manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=first+ave+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "146 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=146+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "mansion avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=mansion+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "44 dr queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=44+dr+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "dewitt avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=dewitt+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "morningside avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=morningside+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "5 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=5+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "59 street bridge ramp new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=59+street+bridge+ramp+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 173 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+173+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "thomson ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=thomson+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "broadway ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=broadway+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "30 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=30+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "roosevelt drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=roosevelt+drive+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "213 place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=213+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "w 232 street bronx\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=w+232+street+bronx&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "central rd new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=central+rd+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 6 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+6+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "235 new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=235+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "e175 st bronx\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=e175+st+bronx&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "65 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=65+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "ellis avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=ellis+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "powell avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=powell+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "142 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=142+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "126 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=126+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 112 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+112+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "castleton avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=castleton+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "noble avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=noble+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "lefferts place new york\n",
      "brookfield ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=brookfield+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "chatterton avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=chatterton+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "95 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=95+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "meridan road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=meridan+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "e 46 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=e+46+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 105 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+105+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "32 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=32+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 132 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+132+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "21 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=21+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "mill road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=mill+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "hughes avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=hughes+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "center drive new york\n",
      "48 st queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=48+st+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "107 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=107+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "brighton 1 road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=brighton+1+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "smiths lane new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=smiths+lane+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "bedell street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bedell+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 47 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+47+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "irwin place new york\n",
      "beach avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "grandview avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=grandview+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 143 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+143+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "90 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=90+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 164 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+164+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "saint james place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=saint+james+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 158 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+158+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 94 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+94+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "9 ave manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=9+ave+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "belt new york\n",
      "66 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=66+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 153 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+153+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "hart pl new york\n",
      "bayview avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bayview+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 185 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+185+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "olmstead avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=olmstead+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "rf wagner place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=rf+wagner+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 104 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+104+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "lakeview street new york\n",
      "rogers avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=rogers+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "81 jersey street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=81+jersey+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 63 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+63+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "w 53 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=w+53+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "57 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=57+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "11 ave manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=11+ave+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "37 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=37+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 83 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+83+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "63 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=63+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "158 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=158+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "30 ave queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=30+ave+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 49 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+49+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "195 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=195+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "oakley st new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=oakley+st+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "king place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=king+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "181 place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=181+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 44 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+44+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 52  street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+52++street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "saint james street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=saint+james+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "10 sreet new york\n",
      "hicksville road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=hicksville+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "warwick street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=warwick+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "171 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=171+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "st joseph avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=st+joseph+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "crescent avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=crescent+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "83 drive queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=83+drive+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "189 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=189+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "montgomery st new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=montgomery+st+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "55 drive queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=55+drive+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "mill river road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=mill+river+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "188 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=188+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "115 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=115+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "page ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=page+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "vandervort avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=vandervort+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "56 road queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=56+road+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "5 ave manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=5+ave+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 176 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+176+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "146 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=146+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "horizon court new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=horizon+court+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "maple pkwy new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=maple+pkwy+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "brookdale plaza new york\n",
      "54 road queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=54+road+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "dahill road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=dahill+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "122 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=122+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "65 place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=65+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "2 place manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=2+place+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "bay 35 brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bay+35+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "104 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=104+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "14 ave brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=14+ave+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "w 43 st manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=w+43+st+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "46 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=46+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "41 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=41+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 43 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+43+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "highland avenue new york\n",
      "94 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=94+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "16 ave brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=16+ave+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "bay 53 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bay+53+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 138 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+138+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "72 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=72+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "gunther avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=gunther+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "cliff street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=cliff+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 167 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+167+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "14 avenue brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=14+avenue+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 24 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+24+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "bedell st new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bedell+st+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "taylor avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=taylor+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "179 street bronx\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=179+street+bronx&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 237 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+237+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "43 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=43+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "boulevard new york\n",
      "pierce avenue new york\n",
      "beach 38 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+38+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 59 st manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+59+st+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "union avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=union+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "190 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=190+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "105 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=105+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 177 st new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+177+st+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "st claire place manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=st+claire+place+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "merritt avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=merritt+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "hyatt street new york\n",
      "47 ave queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=47+ave+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "37 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=37+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "toll plaza new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=toll+plaza+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "buffalo street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=buffalo+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "41 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=41+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "204 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=204+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "34 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=34+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "george street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=george+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "sands st new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=sands+st+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "133 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=133+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "208 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=208+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "new jersey brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=new+jersey+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "david place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=david+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "booth street new york\n",
      "Found\n",
      "east 188 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+188+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 39 st manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+39+st+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "roosevelt new york\n",
      "114 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=114+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "fieldston terrace new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=fieldston+terrace+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "198 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=198+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "sand lane new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=sand+lane+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "norton avenue new york\n",
      "long island expressway service r new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=long+island+expressway+service+r+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "71 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=71+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "bay 50 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bay+50+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "anthony avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=anthony+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "glenmore avenue new york\n",
      "98 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=98+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "16 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=16+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "77 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=77+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "60 st queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=60+st+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 187 street bronx\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+187+street+bronx&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "11 st queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=11+st+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "45 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=45+avenue+queens&format=json&limit=1 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x000001495E5BB080>, 'Connection to nominatim.openstreetmap.org timed out. (connect timeout=1)'))\n",
      "louisiana ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=louisiana+ave+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D50D190>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "s 3rd st brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=s+3rd+st+brooklyn&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D50D250>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "59 place queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=59+place+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001490C036D80>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "marginal st new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=marginal+st+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000014953DBF050>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "196 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=196+street+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001495B16BAA0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "71 st queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=71+st+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D50FEC0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "62 drive queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=62+drive+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D50F050>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "central road s new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=central+road+s+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x00000149342D4620>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "107-01 continental ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=107-01+continental+ave+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001490C034C20>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "30 place queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=30+place+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001495A2B2FC0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "213 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=213+street+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x00000149037CDFD0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "east 28 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+28+street+brooklyn&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x00000149037CF0B0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "218 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=218+street+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000014910D7DB20>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "42 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=42+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "121 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=121+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "56 drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=56+drive+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 149 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+149+street+manhattan&format=json&limit=1 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x0000014972B4B6E0>, 'Connection to nominatim.openstreetmap.org timed out. (connect timeout=1)'))\n",
      "17 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=17+street+brooklyn&format=json&limit=1 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x000001490C035E80>, 'Connection to nominatim.openstreetmap.org timed out. (connect timeout=1)'))\n",
      "73 ave queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=73+ave+queens&format=json&limit=1 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x000001492D50F6E0>, 'Connection to nominatim.openstreetmap.org timed out. (connect timeout=1)'))\n",
      "63 road queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=63+road+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x00000149037CD940>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "48 ave queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=48+ave+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x00000149037CDC70>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "cross street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=cross+street+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000014928923020>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "58 st queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=58+st+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001490C034D40>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "w 1st st new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=w+1st+st+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001497F6BBF50>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "81 st queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=81+st+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x00000149037CDAC0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "69 road queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=69+road+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D535D00>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "66 ave queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=66+ave+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x00000149686D15B0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "42th street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=42th+street+manhattan&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001490C037A70>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "hunter avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=hunter+avenue+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000014928923140>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "68 drive queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=68+drive+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D50E480>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "73 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=73+street+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D537320>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "234 place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=234+place+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000014955BE3620>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "archer road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=archer+road+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001490C037DA0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "38 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=38+street+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001495B865BE0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "west 136 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+136+street+manhattan&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D535520>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "45 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=45+street+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D535CD0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "hull ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=hull+ave+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001495B4A2870>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "43 ave queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=43+ave+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001490C037A70>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "60 road queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=60+road+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D50FEC0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "21 ave brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=21+ave+brooklyn&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D536750>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "64 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=64+street+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D535E20>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "17 avenue brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=17+avenue+brooklyn&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000014928923020>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "47 road queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=47+road+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001490C037980>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "10 st queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=10+st+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x00000149037CFCB0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "60 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=60+avenue+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D537E60>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "67 road queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=67+road+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D537560>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "39 st queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=39+st+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x00000149289236B0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "64 road queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=64+road+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D535BE0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "30 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=30+street+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D534BC0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "virginia avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=virginia+avenue+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D537290>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "west 5 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+5+street+brooklyn&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x00000149037CDAC0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "glen street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=glen+street+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D535E50>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "44 ave queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=44+ave+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D537890>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "251 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=251+street+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000014968494DD0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "63 drive queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=63+drive+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x00000149037CE360>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "2 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=2+street+manhattan&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x00000149037CF7D0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "221 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=221+street+queens&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x00000149064EF3B0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "93 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=93+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "73 place queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=73+place+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "80-26 baxter ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=80-26+baxter+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 178 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+178+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "99 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=99+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "77 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=77+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "knapp st new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=knapp+st+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "37 ave queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=37+ave+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "65 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=65+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "92 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=92+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 16 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+16+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "71 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=71+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "97 place queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=97+place+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "48th street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=48th+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "77 ave queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=77+ave+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "25 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=25+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "184 street bronx\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=184+street+bronx&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "bridge plz s new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bridge+plz+s+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "maple st brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=maple+st+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "washington ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=washington+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "ocean view ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=ocean+view+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "35 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=35+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "2 place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=2+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 16 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+16+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "73 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=73+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "meadow road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=meadow+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "hillside ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=hillside+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "mohr street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=mohr+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "37 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=37+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "11 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=11+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "48th st new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=48th+st+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "e 180 street bronx\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=e+180+street+bronx&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "durant ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=durant+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "62 st queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=62+st+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "seaview avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=seaview+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "101 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=101+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 13 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+13+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "53 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=53+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 98 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+98+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "stanley avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=stanley+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 3 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+3+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "52 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=52+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "van dam st new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=van+dam+st+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 189 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+189+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "56 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=56+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "173 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=173+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "saint anns avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=saint+anns+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "30 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=30+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 159 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+159+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 67 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+67+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "41 st queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=41+st+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 236 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+236+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "wood avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=wood+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "40th street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=40th+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "washington ave brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=washington+ave+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "w 38 st manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=w+38+st+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "117 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=117+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "103 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=103+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "187 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=187+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "110 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=110+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "131 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=131+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 197 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+197+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "36 sreet new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=36+sreet+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "river road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=river+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "126 st manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=126+st+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "cresent street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=cresent+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "44th street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=44th+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "albert road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=albert+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 14 st manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+14+st+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "3 ave brooklyn\n",
      "31 street queens\n",
      "beach 67 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+67+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "w181 st. manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=w181+st.+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "38th street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=38th+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "lie service road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=lie+service+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "peck avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=peck+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "422 east 168 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=422+east+168+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 5 new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+5+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "willowbrook road new york\n",
      "Found\n",
      "east 34 st manhattan\n",
      "west 47 st manhattan\n",
      "east 34 st manhattan\n",
      "east 57 st manhattan\n",
      "camp road new york\n",
      "Found\n",
      "e187 street bronx\n",
      "Found\n",
      "milford drive new york\n",
      "109 street manhattan\n",
      "east 164 street new york\n",
      "Found\n",
      "31 place new york\n",
      "Found\n",
      "grosvenor street new york\n",
      "Found\n",
      "75 place new york\n",
      "Found\n",
      "oxford avenue new york\n",
      "west 70 street manhattan\n",
      "west 163 street new york\n",
      "ross avenue new york\n",
      "35 manhattan\n",
      "crystal street new york\n",
      "204 street bronx\n",
      "Found\n",
      "231 street queens\n",
      "route 440 south new york\n",
      "lo jackson avenue new york\n",
      "west 7th brooklyn\n",
      "e 12th st new york\n",
      "Found\n",
      "maple parkway new york\n",
      "Found\n",
      "112 street manhattan\n",
      "east 177 street bronx\n",
      "rogers ave new york\n",
      "Found\n",
      "west 3rd brooklyn\n",
      "schoharie street new york\n",
      "spruce street queens\n",
      "beaver avenue new york\n",
      "melrose place new york\n",
      "Found\n",
      "12 avenue brooklyn\n",
      "willet street new york\n",
      "east 233 st new york\n",
      "65 pl queens\n",
      "east avenue new york\n",
      "east 238 street bronx\n",
      "rockwell avenue new york\n",
      "Found\n",
      "west 238 street new york\n",
      "miles avenue new york\n",
      "Found\n",
      "little bay road new york\n",
      "west 6th new york\n",
      "133 street manhattan\n",
      "1195 east 229 street new york\n",
      "60  street queens\n",
      "brighton 3 street new york\n",
      "51 ave queens\n",
      "58 street queens\n",
      "prospect street new york\n",
      "Found\n",
      "ramp new york\n",
      "st raymond ave new york\n",
      "bowen street new york\n",
      "mathias avenue new york\n",
      "surf drive new york\n",
      "e 20th st new york\n",
      "east 116 street manhattan\n",
      "44 road queens\n",
      "sheridan avenue new york\n",
      "avenue f new york\n",
      "oakdale avenue new york\n",
      "westend avenue new york\n",
      "55 street brooklyn\n",
      "60 place new york\n",
      "Found\n",
      "beach 34 street new york\n",
      "Found\n",
      "77 street manhattan\n",
      "bleeker street new york\n",
      "highland avenue new york\n",
      "Found\n",
      "park drive east new york\n",
      "Found\n",
      "beach 54 street new york\n",
      "64-23 cooper ave new york\n",
      "ridge street new york\n",
      "68-82 78th st new york\n",
      "Found\n",
      "ramp new york\n",
      "ramp new york\n",
      "ramp new york\n",
      "38 avenue queens\n",
      "milford drive new york\n",
      "kermit avenue new york\n",
      "Found\n",
      "118 avenue queens\n",
      "east 109 street manhattan\n",
      "haven avenue new york\n",
      "Found\n",
      "colgate avenue new york\n",
      "Found\n",
      "530 west 236 street new york\n",
      "beach 26 street new york\n",
      "west 160 street new york\n",
      "67 street brooklyn\n",
      "east 179 new york\n",
      "long island expy new york\n",
      "Found\n",
      "beach 150 street new york\n",
      "palmer ave new york\n",
      "4-90 seneca ave new york\n",
      "Found\n",
      "south 10 street brooklyn\n",
      "roebling avenue new york\n",
      "Found\n",
      "east 63 st manhattan\n",
      "west 122 street new york\n",
      "holland avenue new york\n",
      "Found\n",
      "545 w 236 st new york\n",
      "cooper avenue new york\n",
      "margaret place new york\n",
      "Found\n",
      "west 110 new york\n",
      "940  east 174 street new york\n",
      "east  177 street bronx\n",
      "106-6 otis ave new york\n",
      "Found\n",
      "beaver road new york\n",
      "725 70 street new york\n",
      "42 place new york\n",
      "Found\n",
      "rosedale ave new york\n",
      "Found\n",
      "east 54 street manhattan\n",
      "farragut place new york\n",
      "18 street brooklyn\n",
      "21 street queens\n",
      "east 116 street manhattan\n",
      "109 street manhattan\n",
      "65 street manhattan\n",
      "ramp new york\n",
      "126 st queens\n",
      "stone avenue brooklyn\n",
      "east 53th street new york\n",
      "15 street manhattan\n",
      "meadow lake rd new york\n",
      "woodward avenue new york\n",
      "Found\n",
      "east 126 street manhattan\n",
      "east 14 street manhattan\n",
      "glenwood avenue new york\n",
      "123 street manhattan\n",
      "120 street queens\n",
      "79 place new york\n",
      "Found\n",
      "review place new york\n",
      "Found\n",
      "linwood street new york\n",
      "woodcutters lane new york\n",
      "Found\n",
      "meadow lane new york\n",
      "Found\n",
      "88 street queens\n",
      "center drive new york\n",
      "Found\n",
      "river boulevard new york\n",
      "west 43 st manhattan\n",
      "2 lincoln square new york\n",
      "morris ave new york\n",
      "west 47 street manhattan\n",
      "ellis ave new york\n",
      "s/b south portland avenue new york\n",
      "fane court new york\n",
      "126 new york\n",
      "edgemere avenue new york\n",
      "east 81 st brooklyn\n",
      "grace avenue new york\n",
      "Found\n",
      "77 street queens\n",
      "navy walk new york\n",
      "west 10-156 street new york\n",
      "ramp new york\n",
      "west 122 street new york\n",
      "w 156 st manhattan\n",
      "east 105 street new york\n",
      "luquer street new york\n",
      "Found\n",
      "cooper street new york\n",
      "ocean lane new york\n",
      "west 123 street manhattan\n",
      "woodrow road new york\n",
      "Found\n",
      "dongan street new york\n",
      "Found\n",
      "108 st queens\n",
      "beach 83 street queens\n",
      "24 street new york\n",
      "maple avenue new york\n",
      "Found\n",
      "east 233 street new york\n",
      "21-10 21st ave new york\n",
      "Found\n",
      "east 57 st manhattan\n",
      "oakdale avenue new york\n",
      "greene street new york\n",
      "108 street manhattan\n",
      "service road new york\n",
      "newtown road new york\n",
      "58 street queens\n",
      "67 place new york\n",
      "Found\n",
      "89 street manhattan\n",
      "hamilton street new york\n",
      "glenmore avenue new york\n",
      "east 42  street manhattan\n",
      "e112th manhattan\n",
      "48 sreet new york\n",
      "127 street manhattan\n",
      "59 avenue queens\n",
      "south 5 st brooklyn\n",
      "31 st queens\n",
      "84 street queens\n",
      "church street queens\n",
      "Found\n",
      "21 street queens\n",
      "154 street queens\n",
      "58 street queens\n",
      "s4 st brooklyn\n",
      "46 street queens\n",
      "34 ave queens\n",
      "60 street queens\n",
      "51 street queens\n",
      "unknown new york\n",
      "58 street queens\n",
      "east 59 street manhattan\n",
      "31 street queens\n",
      "flagg place new york\n",
      "28 sreet new york\n",
      "78  street queens\n",
      "31 st queens\n",
      "156 avenue new york\n",
      "east 188 street bronx\n",
      "29 street manhattan\n",
      "149 road queens\n",
      "bennett street new york\n",
      "76 drive queens\n",
      "166 street queens\n",
      "castleton ave new york\n",
      "230 street queens\n",
      "102 street queens\n",
      "mulford avenue new york\n",
      "154 street queens\n",
      "81 street queens\n",
      "60 street queens\n",
      "39 place queens\n",
      "109 road queens\n",
      "tyler ave new york\n",
      "76 road queens\n",
      "east 35 street manhattan\n",
      "38 sreet new york\n",
      "42 street queens\n",
      "east 100 street brooklyn\n",
      "east 34 street brooklyn\n",
      "clymer street new york\n",
      "Found\n",
      "24 avenue queens\n",
      "17 ave queens\n",
      "64 street brooklyn\n",
      "stewart avenue new york\n",
      "38 avenue queens\n",
      "east 161 street bronx\n",
      "crawford avenue new york\n",
      "Found\n",
      "58 street queens\n",
      "170 street queens\n",
      "45 street brooklyn\n",
      "69 avenue queens\n",
      "143 place queens\n",
      "75 road queens\n",
      "west 145 street manhattan\n",
      "84 street brooklyn\n",
      "19 avenue queens\n",
      "post avenue new york\n",
      "31 street queens\n",
      "23 street queens\n",
      "east 35 street manhattan\n",
      "silver lake road new york\n",
      "west 145 street manhattan\n",
      "locust st brooklyn\n",
      "Found\n",
      "rodney st new york\n",
      "Found\n",
      "east 54 street manhattan\n",
      "41 street queens\n",
      "woodside ave new york\n",
      "Found\n",
      "east 128 street manhattan\n",
      "berry st new york\n",
      "Found\n",
      "dawson court new york\n",
      "103 avenue queens\n",
      "78 avenue queens\n",
      "grandview ave new york\n",
      "Found\n",
      "east 233 street new york\n",
      "95 street brooklyn\n",
      "72 street queens\n",
      "178 street queens\n",
      "w141 street new york\n",
      "5 ave new york\n",
      "14 road queens\n",
      "14 street queens\n",
      "16 avenue brooklyn\n",
      "east 54 street brooklyn\n",
      "31 ave queens\n",
      "bradley ave new york\n",
      "Found\n",
      "division avenue new york\n",
      "Found\n",
      "mclean avenue new york\n",
      "Found\n",
      "hamilton new york\n",
      "west 177 st manhattan\n",
      "78 avenue queens\n",
      "fowler street new york\n",
      "beach 74 street queens\n",
      "55 street brooklyn\n",
      "furman avenue new york\n",
      "Found\n",
      "18 avenue brooklyn\n",
      "209 street queens\n",
      "beach 74 street queens\n",
      "70 street queens\n",
      "21 street queens\n",
      "n/a new york\n",
      "60 street queens\n",
      "west 130 street manhattan\n",
      "e62 street manhattan\n",
      "66 transverse road new york\n",
      "east 26 street brooklyn\n",
      "71 road queens\n",
      "saint andrews road new york\n",
      "25 sreet new york\n",
      "104 manhattan\n",
      "Found\n",
      "28 avenue queens\n",
      "east 132 street manhattan\n",
      "180 street queens\n",
      "51 street queens\n",
      "139 street queens\n",
      "s 1 street brooklyn\n",
      "hamlin place new york\n",
      "Found\n",
      "244 street new york\n",
      "fulton new york\n",
      "8 avenue brooklyn\n",
      "71 crescent new york\n",
      "sharpe avenue new york\n",
      "giles place new york\n",
      "chelsea road new york\n",
      "Found\n",
      "milford drive new york\n",
      "36th street manhattan\n",
      "anderson avenue new york\n",
      "Found\n",
      "233 street new york\n",
      "roxbury street new york\n",
      "rockaway street new york\n",
      "london road new york\n",
      "soundview avenue new york\n",
      "Found\n",
      "doreen drive new york\n",
      "Found\n",
      "hudson avenue new york\n",
      "roxbury street new york\n",
      "herbert street new york\n",
      "Found\n",
      "soundview road new york\n",
      "gates place new york\n",
      "bailey avenue new york\n",
      "Found\n",
      "bradley avenue new york\n",
      "Found\n",
      "markwood road new york\n",
      "clinton avenue new york\n",
      "cranberry court new york\n",
      "beach road new york\n",
      "Found\n",
      "woodhull avenue new york\n",
      "229 street new york\n",
      "bloomfield avenue new york\n",
      "Found\n",
      "sand street new york\n",
      "wilcox street new york\n",
      "connor street new york\n",
      "east 52 street new york\n",
      "simonson place new york\n",
      "connor street new york\n",
      "pembroke avenue new york\n",
      "commonwealth avenue new york\n",
      "Found\n",
      "west 232 street new york\n",
      "beach 83 street new york\n",
      "englewood avenue new york\n",
      "Found\n",
      "ashland avenue new york\n",
      "sheridan avenue new york\n",
      "stewart street new york\n",
      "west 260 street new york\n",
      "st marks avenue new york\n",
      "mann avenue new york\n",
      "hart street new york\n",
      "Found\n",
      "bayard street new york\n",
      "Found\n",
      "shepard avenue new york\n",
      "east 229 street new york\n",
      "ridgewood street new york\n",
      "west 169 street new york\n",
      "northfield avenue new york\n",
      "milford drive new york\n",
      "west 242 street new york\n",
      "belmont avenue new york\n",
      "beach 68 street new york\n",
      "Found\n",
      "west 169 street new york\n",
      "mayfair drive new york\n",
      "hancock street new york\n",
      "Found\n",
      "glenmore avenue new york\n",
      "98 avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=98+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "lie south service road new york\n",
      "independence avenue new york\n",
      "Found\n",
      "connor street new york\n",
      "metro avenue new york\n",
      "orange avenue new york\n",
      "taylor street new york\n",
      "Found\n",
      "dongan avenue new york\n",
      "Found\n",
      "woodbine avenue new york\n",
      "eaton place new york\n",
      "Found\n",
      "banker street new york\n",
      "hart place new york\n",
      "west 214 street new york\n",
      "station avenue new york\n",
      "milford street new york\n",
      "207 street new york\n",
      "peter street new york\n",
      "ashland place new york\n",
      "service road new york\n",
      "lasalle street new york\n",
      "flagg place new york\n",
      "69 lane new york\n",
      "waverly avenue new york\n",
      "prospect place new york\n",
      "Found\n",
      "chestnut avenue new york\n",
      "Found\n",
      "pierrepont street new york\n",
      "chaffee avenue new york\n",
      "Found\n",
      "218 street new york\n",
      "west 154 street new york\n",
      "quincy street new york\n",
      "Found\n",
      "nixon avenue new york\n",
      "hartland avenue new york\n",
      "Found\n",
      "st marks avenue new york\n",
      "norwich street new york\n",
      "washington avenue new york\n",
      "watson avenue new york\n",
      "sand street new york\n",
      "emerson court new york\n",
      "Found\n",
      "morgan lane new york\n",
      "commerce street new york\n",
      "grove avenue new york\n",
      "ferris place new york\n",
      "western avenue new york\n",
      "69 lane new york\n",
      "69 lane new york\n",
      "willis avenue new york\n",
      "Found\n",
      "camden court new york\n",
      "harold avenue new york\n",
      "sheridan avenue new york\n",
      "woodhull avenue new york\n",
      "lawrence street new york\n",
      "Found\n",
      "queen street new york\n",
      "dwight street new york\n",
      "richards street new york\n",
      "glenwood street new york\n",
      "lenore court new york\n",
      "plymouth street new york\n",
      "Found\n",
      "west 131 street new york\n",
      "queen street new york\n",
      "lathrop avenue new york\n",
      "walcott avenue new york\n",
      "Found\n",
      "connor street new york\n",
      "west 232 street new york\n",
      "depew avenue new york\n",
      "waverly avenue new york\n",
      "berkeley place new york\n",
      "faber street new york\n",
      "clermont avenue new york\n",
      "Found\n",
      "cooper avenue new york\n",
      "milford drive new york\n",
      "elmwood avenue new york\n",
      "Found\n",
      "woodhull avenue new york\n",
      "waverly avenue new york\n",
      "felton street new york\n",
      "louisiana avenue new york\n",
      "felton street new york\n",
      "bay 52 street new york\n",
      "kirkland court new york\n",
      "hudson walk new york\n",
      "Found\n",
      "beach 60 street new york\n",
      "Found\n",
      "service road new york\n",
      "thayer street new york\n",
      "garrison avenue new york\n",
      "Found\n",
      "west 235 street new york\n",
      "st marks avenue new york\n",
      "scott avenue new york\n",
      "glenwood street new york\n",
      "rockne street new york\n",
      "Found\n",
      "metro avenue new york\n",
      "bache street new york\n",
      "wilcox street new york\n",
      "canal street west new york\n",
      "coventry loop new york\n",
      "Found\n",
      "208 place new york\n",
      "faber street new york\n",
      "brighton 3 street new york\n",
      "willow brook road new york\n",
      "harold avenue new york\n",
      "glenwood street new york\n",
      "pierrepont place new york\n",
      "wagner place new york\n",
      "provost avenue new york\n",
      "Found\n",
      "portland place new york\n",
      "connor street new york\n",
      "metro avenue new york\n",
      "metro avenue new york\n",
      "metro avenue new york\n",
      "brown street new york\n",
      "Found\n",
      "st marks avenue new york\n",
      "longview road new york\n",
      "rensselaer avenue new york\n",
      "Found\n",
      "stanwix street new york\n",
      "Found\n",
      "chester avenue new york\n",
      "Found\n",
      "180 street new york\n",
      "sheridan avenue new york\n",
      "kingsland avenue new york\n",
      "Found\n",
      "wellington court new york\n",
      "metro avenue new york\n",
      "222 street new york\n",
      "204 street new york\n",
      "163 street new york\n",
      "warwick avenue new york\n",
      "willow street new york\n",
      "arlene street new york\n",
      "metro avenue new york\n",
      "florence avenue new york\n",
      "Found\n",
      "bay 52 street new york\n",
      "metro avenue new york\n",
      "clifton street new york\n",
      "paulding avenue new york\n",
      "east 83 street new york\n",
      "longview road new york\n",
      "knollwood court new york\n",
      "grace court new york\n",
      "loring place new york\n",
      "183 place new york\n",
      "Found\n",
      "191 street new york\n",
      "west 188 street new york\n",
      "commerce street new york\n",
      "166 place new york\n",
      "Found\n",
      "paulding avenue new york\n",
      "watson avenue new york\n",
      "hunt avenue new york\n",
      "bolivar street new york\n",
      "brooklyn avenue new york\n",
      "Found\n",
      "156 street new york\n",
      "weeks avenue new york\n",
      "122 street new york\n",
      "akron street new york\n",
      "south end avenue new york\n",
      "westwood avenue new york\n",
      "berkeley place new york\n",
      "corbin drive new york\n",
      "cloverdale lane new york\n",
      "Found\n",
      "156 street new york\n",
      "sheridan avenue new york\n",
      "260 street new york\n",
      "sheridan avenue new york\n",
      "orange avenue new york\n",
      "144 place new york\n",
      "Found\n",
      "washington avenue new york\n",
      "sheridan avenue new york\n",
      "roxbury street new york\n",
      "156 street new york\n",
      "metro avenue new york\n",
      "westwood avenue new york\n",
      "kenilworth avenue new york\n",
      "Found\n",
      "235 court new york\n",
      "mersereau avenue new york\n",
      "Found\n",
      "sylvan avenue new york\n",
      "156 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=156+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "rockaway street new york\n",
      "glenn street new york\n",
      "harold avenue new york\n",
      "waverly avenue new york\n",
      "metro avenue new york\n",
      "cherry place new york\n",
      "west 227 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+227+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "207 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=207+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "233 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=233+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "glenn street new york\n",
      "grove avenue new york\n",
      "dupont street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=dupont+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "poplar street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=poplar+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "metro avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=metro+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "71 crescent new york\n",
      "markham place new york\n",
      "wagner place new york\n",
      "paulding avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=paulding+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "connor street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=connor+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "waverly avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=waverly+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "hudson avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=hudson+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "163 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=163+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "sheridan avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=sheridan+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "65 crescent new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=65+crescent+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "bush avenue new york\n",
      "tyndall avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=tyndall+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 169 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+169+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "duryea place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=duryea+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 156 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+156+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "camden court new york\n",
      "buffalo avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=buffalo+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "overlook terrace new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=overlook+terrace+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "ardmore avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=ardmore+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "pulaski street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=pulaski+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "colonial road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=colonial+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 83 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+83+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "hemlock street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=hemlock+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "sanders street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=sanders+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "larkin street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=larkin+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "harold avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=harold+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "nancy lane new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=nancy+lane+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 131 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+131+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "glenmore avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=glenmore+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "vine street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=vine+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "covert street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=covert+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "duane street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=duane+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 157 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+157+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "stewart avenue new york\n",
      "essex drive new york\n",
      "forest street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=forest+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "first street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=first+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "71 crescent new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=71+crescent+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "ridge street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=ridge+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "stratton street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=stratton+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "woodhull avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=woodhull+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "crystal avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=crystal+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "bri 1 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bri+1+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "sound view road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=sound+view+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "monroe street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=monroe+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "heather court new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=heather+court+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 186 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+186+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "jewel street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=jewel+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "99 place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=99+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 154 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+154+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "pulaski avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=pulaski+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "stewart street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=stewart+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "oak avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=oak+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "69 lane new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=69+lane+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "westwood avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=westwood+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "lasalle street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=lasalle+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "morning star road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=morning+star+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "plank road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=plank+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "teller avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=teller+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "crafton avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=crafton+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "milford drive new york\n",
      "saint john avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=saint+john+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "stockton street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=stockton+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "sleepy hollow road new york\n",
      "shephard avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=shephard+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "64 circle new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=64+circle+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "ashland place new york\n",
      "west 232 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+232+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 69 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+69+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "stewart avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=stewart+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "hewlett avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=hewlett+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "walnut avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=walnut+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "st marks avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=st+marks+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "mulberry avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=mulberry+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "julie court new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=julie+court+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "lambert avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=lambert+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "sanford street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=sanford+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 216 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+216+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "bailey place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bailey+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "stuyvesant avenue new york\n",
      "east 166 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+166+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "plaza street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=plaza+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "macon street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=macon+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "wagner place new york\n",
      "b street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=b+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "milford drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=milford+drive+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "harding street new york\n",
      "brady avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=brady+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "cottage place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=cottage+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "218 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=218+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 151 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+151+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "pond way new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=pond+way+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "wright avenue new york\n",
      "albermarle road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=albermarle+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "faraday street new york\n",
      "oconnor avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=oconnor+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "willow brook road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=willow+brook+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "nelson avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=nelson+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "park la south new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=park+la+south+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "derby court new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=derby+court+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "holiday way new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=holiday+way+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "melrose avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=melrose+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "avon road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=avon+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "yale street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=yale+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "richard lane new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=richard+lane+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "spencer street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=spencer+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "birch road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=birch+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "turf road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=turf+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "vassar street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=vassar+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "oakdale avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=oakdale+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "queen street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=queen+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "fourth avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=fourth+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "ridge road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=ridge+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "felton street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=felton+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "newport avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=newport+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "revere avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=revere+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "53 drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=53+drive+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "essex drive new york\n",
      "merrill avenue new york\n",
      "sand street new york\n",
      "150 place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=150+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "washington avenue new york\n",
      "essex drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=essex+drive+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "old farmers lane new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=old+farmers+lane+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "cooper avenue new york\n",
      "gardenia lane new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=gardenia+lane+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "harding street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=harding+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beechwood avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beechwood+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "eleanor place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=eleanor+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "avon lane new york\n",
      "loring place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=loring+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "renee place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=renee+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "station avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=station+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "seminole street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=seminole+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 154 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+154+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "fordham street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=fordham+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "flagg place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=flagg+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "latimer avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=latimer+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "palisades avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=palisades+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "arlington avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=arlington+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "travis avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=travis+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 66 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+66+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "benjamin drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=benjamin+drive+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "wellington court new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=wellington+court+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "springfield avenue new york\n",
      "157 avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=157+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "stone lane new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=stone+lane+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "grove place new york\n",
      "arlington place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=arlington+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "lathrop avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=lathrop+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "silver beach road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=silver+beach+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "mulberry circle new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=mulberry+circle+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "heron lane new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=heron+lane+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "commodore drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=commodore+drive+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "bush avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bush+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "stuyvesant place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=stuyvesant+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "quentin road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=quentin+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "benjamin place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=benjamin+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "clay street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=clay+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 229 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+229+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beekman street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beekman+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 72 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+72+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "clifton street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=clifton+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "simonson place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=simonson+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "sheldon avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=sheldon+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 172 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+172+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "larkin avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=larkin+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "249 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=249+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "st patricks place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=st+patricks+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "van horn street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=van+horn+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 163 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+163+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "saxon avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=saxon+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "giles place new york\n",
      "circle road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=circle+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "jennifer place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=jennifer+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "dwight street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=dwight+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "roxbury street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=roxbury+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "camden avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=camden+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "boulevard street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=boulevard+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "colonial avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=colonial+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "mcbride street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=mcbride+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "dartmouth street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=dartmouth+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "fowler avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=fowler+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "canterbury avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=canterbury+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "radnor road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=radnor+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "fulton avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=fulton+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "wilson street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=wilson+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 65 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+65+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "quinlan avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=quinlan+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "albert court new york\n",
      "carlton avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=carlton+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "arlene street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=arlene+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "saybrook street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=saybrook+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "55 drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=55+drive+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "bryson avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bryson+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "giles place new york\n",
      "eagle street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=eagle+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "butler avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=butler+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "lakewood avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=lakewood+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "hobart avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=hobart+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "giles place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=giles+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "glenwood street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=glenwood+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "willowbrook court new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=willowbrook+court+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "bay 52 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bay+52+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "knollwood court new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=knollwood+court+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "rio drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=rio+drive+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "lie north service road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=lie+north+service+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "ridgewood avenue new york\n",
      "sand street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=sand+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "nicholas street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=nicholas+street+new+york&format=json&limit=1 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x000001492D2B7830>, 'Connection to nominatim.openstreetmap.org timed out. (connect timeout=1)'))\n",
      "sharpe avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=sharpe+avenue+new+york&format=json&limit=1 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x000001492D2F18B0>, 'Connection to nominatim.openstreetmap.org timed out. (connect timeout=1)'))\n",
      "st johns place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=st+johns+place+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D50C380>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "100 drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=100+drive+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001490C035B20>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "london road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=london+road+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D2B6A80>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "mulford avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=mulford+avenue+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D2B6CF0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "glenn street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=glenn+street+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x00000149037CFCB0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "beach 64 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+64+street+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001490C0FF9E0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "continental place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=continental+place+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000014928923D40>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "garden street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=garden+street+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D2F3AD0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "markham place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=markham+place+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D2F02F0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "east 184 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+184+street+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001490C0FFC80>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "bache street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bache+street+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001490C034860>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "horton street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=horton+street+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x00000149037CF170>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "beach 12 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+12+street+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D2F3950>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "villa avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=villa+avenue+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D2B4770>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "wagner place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=wagner+place+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x00000149037CED20>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "clay pit road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=clay+pit+road+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x00000149342D43E0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "powell street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=powell+street+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x0000014928923DD0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "fillmore street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=fillmore+street+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D2B76E0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "harold street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=harold+street+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D2B7770>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "new lane new york\n",
      "3 place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=3+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "ash street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=ash+street+new+york&format=json&limit=1 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x00000149037CE2D0>, 'Connection to nominatim.openstreetmap.org timed out. (connect timeout=1)'))\n",
      "reeves avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=reeves+avenue+new+york&format=json&limit=1 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x000001492D2F3950>, 'Connection to nominatim.openstreetmap.org timed out. (connect timeout=1)'))\n",
      "south railroad street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=south+railroad+street+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D2B6750>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "pierce avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=pierce+avenue+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D2F3AA0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "dewey avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=dewey+avenue+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x00000149037CE2D0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "206 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=206+street+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001490F4676B0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "lie south service road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=lie+south+service+road+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D50F9E0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "sixth avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=sixth+avenue+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D2B5C40>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "beach 210 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+210+street+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001492D50EB70>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "cornell street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=cornell+street+new+york&format=json&limit=1 (Caused by NameResolutionError(\"<urllib3.connection.HTTPSConnection object at 0x000001490C034EC0>: Failed to resolve 'nominatim.openstreetmap.org' ([Errno 11001] getaddrinfo failed)\"))\n",
      "wales avenue new york\n",
      "153 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=153+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "bay court new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bay+court+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "north railroad street new york\n",
      "hunt avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=hunt+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "service road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=service+road+new+york&format=json&limit=1 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x000001490C0FE1B0>, 'Connection to nominatim.openstreetmap.org timed out. (connect timeout=1)'))\n",
      "farrington street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=farrington+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "monitor street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=monitor+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "daffodil lane new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=daffodil+lane+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "washington avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=washington+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "252 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=252+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "poplar avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=poplar+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "191 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=191+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 84 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+84+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "norton avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=norton+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "village road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=village+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "manchester drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=manchester+drive+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "rocky hill road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=rocky+hill+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "173 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=173+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "231 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=231+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "avery avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=avery+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 159 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+159+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "davis place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=davis+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "247 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=247+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "kosciusko street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=kosciusko+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "alexander avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=alexander+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "rodman street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=rodman+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "huntington avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=huntington+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "209 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=209+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "belmont avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=belmont+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 231 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+231+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 28 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+28+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "frederick blvd new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=frederick+blvd+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "13th street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=13th+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 123 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+123+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "217 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=217+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 4 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+4+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "belmont ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=belmont+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "gilbert street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=gilbert+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 12 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+12+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "77 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=77+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 128 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+128+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "181 street queens\n",
      "hanover square new york\n",
      "east 59 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+59+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 12 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+12+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "212 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=212+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "harrison ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=harrison+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "239 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=239+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "josephs lane new york\n",
      "175 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=175+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "52 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=52+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "18 avenue brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=18+avenue+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 132 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+132+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "66 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=66+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "57 drive new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=57+drive+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 63 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+63+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "george street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=george+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "57 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=57+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "43rd street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=43rd+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "202 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=202+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "39 park avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=39+park+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "180 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=180+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "mexico street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=mexico+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 67 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+67+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "long island expwy new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=long+island+expwy+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 28 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+28+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 148 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+148+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "59 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=59+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "shaughnessy road new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=shaughnessy+road+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach walk new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+walk+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "21 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=21+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "209 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=209+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 54 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+54+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "48 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=48+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "163 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=163+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 169 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+169+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "78 street queens\n",
      "5 avenue brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=5+avenue+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "500 riverside park south new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=500+riverside+park+south+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "31 road queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=31+road+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 34 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+34+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 129 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+129+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 207 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+207+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 24 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+24+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "w 174 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=w+174+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "79 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=79+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "109 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=109+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "hillside new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=hillside+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "81 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=81+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "rockwood avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=rockwood+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "78 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=78+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "69 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=69+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 92 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+92+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "48 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=48+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "103 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=103+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 126 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+126+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "marion avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=marion+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "28 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=28+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 51 manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+51+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 69 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+69+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "64 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=64+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "155 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=155+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "3000 ocean parkway new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=3000+ocean+parkway+new+york&format=json&limit=1 (Caused by ConnectTimeoutError(<urllib3.connection.HTTPSConnection object at 0x000001492D359040>, 'Connection to nominatim.openstreetmap.org timed out. (connect timeout=1)'))\n",
      "east 126 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+126+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "53 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=53+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 201 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+201+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "shore road queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=shore+road+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "45 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=45+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "16 avenue brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=16+avenue+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "21 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=21+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "10 avenue brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=10+avenue+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "summer street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=summer+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "depot place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=depot+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "bay 47 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bay+47+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "kensico avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=kensico+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "76 drive queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=76+drive+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west side new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+side+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "160 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=160+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "foster rd new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=foster+rd+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 127 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+127+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "arthur street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=arthur+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "lakeview blvd new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=lakeview+blvd+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "9 street brooklyn\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=9+street+brooklyn&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "33 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=33+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "57 avenue queens\n",
      "thomas street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=thomas+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "199 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=199+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 150 manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+150+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 35 street manhattan\n",
      "hoyt ave new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=hoyt+ave+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 161 street bronx\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+161+street+bronx&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 86 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+86+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "stone avenue new york\n",
      "west 23 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+23+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "118 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=118+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "105 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=105+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 68 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+68+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "putnam avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=putnam+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "168 place new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=168+place+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "beach 36 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=beach+36+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "163 & fox st new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=163+%26+fox+st+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "pitkin street new york\n",
      "east 135 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+135+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "185 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=185+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "hudson river greenway trail new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=hudson+river+greenway+trail+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 233 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+233+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "roseville avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=roseville+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "2065 new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=2065+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "atlantic new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=atlantic+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "177 street bronx\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=177+street+bronx&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "cooper avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=cooper+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "46 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=46+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "east 27 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=east+27+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 70 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+70+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "glenmore new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=glenmore+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "west 238 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=west+238+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "dunkirk road new york\n",
      "brighton 3 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=brighton+3+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "641 new york\n",
      "91 street queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=91+street+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "bolton street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=bolton+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "prospect pl new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=prospect+pl+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "8 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=8+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "christopher lane new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=christopher+lane+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "vandalia street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=vandalia+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "28 ave queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=28+ave+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "western avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=western+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "263 street new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=263+street+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "royce avenue new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=royce+avenue+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "w 35 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=w+35+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "67 avenue queens\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=67+avenue+queens&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "i 687 new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=i+687+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "w 187 street manhattan\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=w+187+street+manhattan&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n",
      "115 avenue queens\n",
      "saw mill river pkwy new york\n",
      "HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Max retries exceeded with url: /search?q=saw+mill+river+pkwy+new+york&format=json&limit=1 (Caused by ReadTimeoutError(\"HTTPSConnectionPool(host='nominatim.openstreetmap.org', port=443): Read timed out. (read timeout=1)\"))\n"
     ]
    }
   ],
   "source": [
    "geolocator = Nominatim(user_agent=\"geoapiVis\")\n",
    "issue = []\n",
    "\n",
    "for idx, row in data_filtered[(data_filtered['LOCATION'] == '(0.0, 0.0)') | data_filtered['LOCATION'].isnull()].iterrows():\n",
    "    if not pd.isna(row['BOROUGH']):\n",
    "        place = str.lower(row['ON STREET NAME'] + \" \" + str(row['BOROUGH']))\n",
    "    else:\n",
    "        place = str.lower(row['ON STREET NAME'] + \" new york\")\n",
    "\n",
    "    if (place not in location_dict.keys()) and (place not in exception_list):\n",
    "\n",
    "        print(place)\n",
    "        try:\n",
    "            location = geolocator.geocode(place)\n",
    "            \n",
    "            if (float(location.raw['lon']) >= min(strict_lon) and float(location.raw['lon']) <= max(strict_lon) and float(location.raw['lat']) >= min(strict_lat) and float(location.raw['lat']) <= max(strict_lat)):\n",
    "                location_dict[place] = location.raw\n",
    "                \n",
    "                print(\"Found\")\n",
    "                data_filtered.loc[idx, 'LONGITUDE'] = float(location.raw['lon'])\n",
    "                data_filtered.loc[idx, 'LATITUDE'] = float(location.raw['lat'])\n",
    "                data_filtered.loc[idx, 'LOCATION'] = str('('+str(location.raw['lat'])+', '+str(location.raw['lon'])+')')\n",
    "        \n",
    "        except Exception as e:\n",
    "            print(e)\n",
    "            exception_list.append(place)\n",
    "            continue\n",
    "    elif place in location_dict.keys():\n",
    "        if not (float(location_dict[place]['lon']) >= min(strict_lon) and float(location_dict[place]['lon']) <= max(strict_lon) and float(location_dict[place]['lat']) >= min(strict_lat) and float(location_dict[place]['lat']) <= max(strict_lat)):\n",
    "            print(\"Issue, 2\", end=\" \")\n",
    "            issue.append(location_dict[place])\n",
    "            if ', new york, ' in location_dict[place]['display_name'].lower():\n",
    "                print(\"Issue!\", location_dict[place])\n",
    "            del location_dict[place]\n",
    "        else:\n",
    "            data_filtered.loc[idx, 'LATITUDE'] = float(location_dict[place]['lat'])\n",
    "            data_filtered.loc[idx, 'LONGITUDE'] = float(location_dict[place]['lon'])\n",
    "            data_filtered.loc[idx, 'LOCATION'] = str('(' + str(location_dict[place]['lat']) + ', ' + str(location_dict[place]['lon']) + ')')\n",
    "    else:\n",
    "        continue"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "fc6c1b0b-1221-4cea-a40c-885a7668b1f6",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(13748, 29)"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_filtered[(data_filtered['LOCATION'] == '(0.0, 0.0)') | data_filtered['LOCATION'].isnull()].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "02acacff-d888-4809-a129-aa07408ff71e",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LATITUDE</th>\n",
       "      <th>LONGITUDE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1.869371e+06</td>\n",
       "      <td>1.869371e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>4.068262e+01</td>\n",
       "      <td>-7.385149e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1.303173e+00</td>\n",
       "      <td>2.552999e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>-2.013600e+02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>4.066796e+01</td>\n",
       "      <td>-7.397483e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>4.072106e+01</td>\n",
       "      <td>-7.392701e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>4.077003e+01</td>\n",
       "      <td>-7.386681e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>4.334444e+01</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           LATITUDE     LONGITUDE\n",
       "count  1.869371e+06  1.869371e+06\n",
       "mean   4.068262e+01 -7.385149e+01\n",
       "std    1.303173e+00  2.552999e+00\n",
       "min    0.000000e+00 -2.013600e+02\n",
       "25%    4.066796e+01 -7.397483e+01\n",
       "50%    4.072106e+01 -7.392701e+01\n",
       "75%    4.077003e+01 -7.386681e+01\n",
       "max    4.334444e+01  0.000000e+00"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_filtered[['LATITUDE', 'LONGITUDE']].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "3d3543f9-a5f0-496b-bfed-73e219ce928e",
   "metadata": {},
   "outputs": [],
   "source": [
    "save_data_filtered = data_filtered.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "12e9233f-ee16-4cd3-b7da-0178c92deac4",
   "metadata": {},
   "outputs": [],
   "source": [
    "data_filtered = save_data_filtered.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "d900015a-e520-476e-90e6-a5886bdc574e",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LATITUDE</th>\n",
       "      <th>LONGITUDE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1.869371e+06</td>\n",
       "      <td>1.869371e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>4.068262e+01</td>\n",
       "      <td>-7.385149e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>1.303173e+00</td>\n",
       "      <td>2.552999e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>-2.013600e+02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>4.066796e+01</td>\n",
       "      <td>-7.397483e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>4.072106e+01</td>\n",
       "      <td>-7.392701e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>4.077003e+01</td>\n",
       "      <td>-7.386681e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>4.334444e+01</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           LATITUDE     LONGITUDE\n",
       "count  1.869371e+06  1.869371e+06\n",
       "mean   4.068262e+01 -7.385149e+01\n",
       "std    1.303173e+00  2.552999e+00\n",
       "min    0.000000e+00 -2.013600e+02\n",
       "25%    4.066796e+01 -7.397483e+01\n",
       "50%    4.072106e+01 -7.392701e+01\n",
       "75%    4.077003e+01 -7.386681e+01\n",
       "max    4.334444e+01  0.000000e+00"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_filtered[['LATITUDE', 'LONGITUDE']].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "849b012e-abd7-472b-9abe-df7cc32555e0",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Serialize data into file:\n",
    "json.dump( location_dict, open( \"location_data.json\", 'w' ) )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "6fb9bc09-2dad-40c3-ae65-ad1a84bff1b4",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Serialize exceptions into file\n",
    "json.dump(exception_list, open(\"exception_data.json\", 'w'))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "50d7facb-88fa-4546-9d7f-ec961c3400a1",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "3955 2993\n"
     ]
    }
   ],
   "source": [
    "print(len(location_dict), len(exception_list))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "a6980bf7-0b11-4c16-92b7-f93c5a3f3680",
   "metadata": {},
   "outputs": [],
   "source": [
    "data_filtered.to_csv(\"Midstep.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "08875ef8-10dd-4731-bdb1-ca02e787c2dc",
   "metadata": {},
   "outputs": [],
   "source": [
    "data_filtered = pd.read_csv(\"Midstep.csv\", index_col=0, parse_dates=['CRASH DATE'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "1d2f86bc-049c-4501-bf8a-38580933aad0",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LATITUDE</th>\n",
       "      <th>LONGITUDE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1.972091e+06</td>\n",
       "      <td>1.972091e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>4.071962e+01</td>\n",
       "      <td>-7.391788e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>4.393646e-01</td>\n",
       "      <td>1.228438e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>-2.013600e+02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>4.066839e+01</td>\n",
       "      <td>-7.397466e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>4.072117e+01</td>\n",
       "      <td>-7.392612e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>4.076998e+01</td>\n",
       "      <td>-7.386540e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>4.334444e+01</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           LATITUDE     LONGITUDE\n",
       "count  1.972091e+06  1.972091e+06\n",
       "mean   4.071962e+01 -7.391788e+01\n",
       "std    4.393646e-01  1.228438e+00\n",
       "min    0.000000e+00 -2.013600e+02\n",
       "25%    4.066839e+01 -7.397466e+01\n",
       "50%    4.072117e+01 -7.392612e+01\n",
       "75%    4.076998e+01 -7.386540e+01\n",
       "max    4.334444e+01  0.000000e+00"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_filtered[['LATITUDE','LONGITUDE']].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "0b97499a-3a84-4380-bb0c-2a1786ab1f30",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CRASH DATE                                       2021-08-07 00:00:00\n",
       "CRASH TIME                                                     20:50\n",
       "BOROUGH                                                     BROOKLYN\n",
       "ZIP CODE                                                     11207.0\n",
       "LATITUDE                                                   40.675495\n",
       "LONGITUDE                                                  -73.88916\n",
       "LOCATION                                      (40.675495, -73.88916)\n",
       "ON STREET NAME                                        LIBERTY AVENUE\n",
       "CROSS STREET NAME                                     SCHENCK AVENUE\n",
       "OFF STREET NAME                                                  NaN\n",
       "NUMBER OF PERSONS INJURED                                        0.0\n",
       "NUMBER OF PERSONS KILLED                                         0.0\n",
       "NUMBER OF PEDESTRIANS INJURED                                      0\n",
       "NUMBER OF PEDESTRIANS KILLED                                       0\n",
       "NUMBER OF CYCLIST INJURED                                          0\n",
       "NUMBER OF CYCLIST KILLED                                           0\n",
       "NUMBER OF MOTORIST INJURED                                         0\n",
       "NUMBER OF MOTORIST KILLED                                          0\n",
       "CONTRIBUTING FACTOR VEHICLE 1                       Steering Failure\n",
       "CONTRIBUTING FACTOR VEHICLE 2                            Unspecified\n",
       "CONTRIBUTING FACTOR VEHICLE 3                            Unspecified\n",
       "CONTRIBUTING FACTOR VEHICLE 4                                    NaN\n",
       "CONTRIBUTING FACTOR VEHICLE 5                                    NaN\n",
       "COLLISION_ID                                                 4446755\n",
       "VEHICLE TYPE CODE 1              Station Wagon/Sport Utility Vehicle\n",
       "VEHICLE TYPE CODE 2                                            Sedan\n",
       "VEHICLE TYPE CODE 3                                            Sedan\n",
       "VEHICLE TYPE CODE 4                                              NaN\n",
       "VEHICLE TYPE CODE 5                                              NaN\n",
       "Name: 75066, dtype: object"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_filtered.iloc[71677]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "803456d3-86d3-4442-8138-8886cb0a0feb",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "pre:  13899 13899\n",
      "post:  13899 13899\n"
     ]
    }
   ],
   "source": [
    "# Back populate longitude and latitude\n",
    "\n",
    "print(\"pre: \", data_filtered['LONGITUDE'].isnull().sum(), data_filtered['LATITUDE'].isnull().sum())\n",
    "\n",
    "\n",
    "for idx, row in data_filtered[(data_filtered['LONGITUDE'].isna() | data_filtered['LONGITUDE'] == 0) & (data_filtered['LOCATION'].notna())].iterrows():\n",
    "    if row['LOCATION']:\n",
    "        try:\n",
    "            lat, lon = row['LOCATION'].strip('()').split(\",\")\n",
    "        \n",
    "            # Check if valid\n",
    "            if (float(lat) >= min(strict_lat) and float(lat) <= max(strict_lat) and float(lon) >= min(strict_lon) and float(lon) <= max(strict_lon)):\n",
    "                # now, replace\n",
    "                data_filtered.loc[idx, 'LATITUDE'] = float(lat)\n",
    "                data_filtered.loc[idx, 'LONGITUDE'] = float(lon)\n",
    "        \n",
    "            elif  (float(lon) >= min(strict_lat) and float(lon) <= max(strict_lat) and float(lat) >= min(strict_lon) and float(lat) <= max(strict_lon)):\n",
    "                # now, replace\n",
    "                print(\"Opp\", end=\" \")\n",
    "                data_filtered.loc[idx, 'LATITUDE'] = float(lat)\n",
    "                data_filtered.loc[idx, 'LONGITUDE'] = float(lon)\n",
    "        except Exception as e:\n",
    "            print(e, row['LOCATION'])\n",
    "            print(idx)\n",
    "            break\n",
    "print(\"post: \", data_filtered['LONGITUDE'].isnull().sum(), data_filtered['LATITUDE'].isnull().sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "0b74e27b-1093-43ec-8944-56a9a9b74ea8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "pre 00:  218 218\n",
      "post 00:  218 218\n"
     ]
    }
   ],
   "source": [
    "print(\"pre 00: \", data_filtered[data_filtered['LONGITUDE'] == 0].shape[0], data_filtered[data_filtered['LATITUDE'] == 0].shape[0])\n",
    "\n",
    "for idx, row in data_filtered[(data_filtered['LONGITUDE'] == 0)].iterrows():\n",
    "    if row['LOCATION']:\n",
    "        lat, lon = row['LOCATION'].strip('()').split(\",\")\n",
    "    \n",
    "        # Check if valid\n",
    "        if (float(lat) >= min(strict_lat) and float(lat) <= max(strict_lat) and float(lon) >= min(strict_lon) and float(lon) <= max(strict_lon)):\n",
    "            # now, replace\n",
    "            data_filtered.loc[idx, 'LATITUDE'] = float(lat)\n",
    "            data_filtered.loc[idx, 'LONGITUDE'] = float(lon)\n",
    "    \n",
    "        elif  (float(lon) >= min(strict_lat) and float(lon) <= max(strict_lat) and float(lat) >= min(strict_lon) and float(lat) <= max(strict_lon)):\n",
    "            # now, replace\n",
    "            print(\"Opp\", end=\" \")\n",
    "            data_filtered.loc[idx, 'LATITUDE'] = float(lat)\n",
    "            data_filtered.loc[idx, 'LONGITUDE'] = float(lon)\n",
    "\n",
    "print(\"post 00: \", data_filtered[data_filtered['LONGITUDE'] == 0].shape[0], data_filtered[data_filtered['LATITUDE'] == 0].shape[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1b4c4266-4c33-4d7c-b201-6973b0cce0ca",
   "metadata": {},
   "outputs": [],
   "source": [
    "print(data_filtered[(data_filtered['LOCATION'].isnull() | (data_filtered['LOCATION'] == '(0.0, 0.0)'))].shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e50746ba-4189-407f-be41-48aa473c1845",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "for col in data_filtered.columns:\n",
    "    print(col, \":\", sum(data_filtered[col].isna()))\n",
    "    print(sum(data_filtered[col].isna())*100/data_filtered.shape[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "edb5b114-f3b7-41fb-80ff-62ce03845747",
   "metadata": {},
   "outputs": [],
   "source": [
    "data_filtered[['LATITUDE', 'LONGITUDE']].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 75,
   "id": "4acc3fec-c6be-4cf4-9162-cce7173c245e",
   "metadata": {},
   "outputs": [],
   "source": [
    "data_filtered.to_csv(\"After_API.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "709a781f-8261-4797-865c-af80ba5c1132",
   "metadata": {},
   "outputs": [],
   "source": [
    "data_filtered = pd.read_csv(\"After_API.csv\", index_col=0)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "e2e8d4f0-3fc9-40c1-99a6-6b7ebd1376d5",
   "metadata": {},
   "outputs": [],
   "source": [
    "strict_lat = [40.492009391283906,40.950900568005]\n",
    "strict_lon = [-74.5633786294863,-73.65616396303963]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "e082e3f0-990b-4785-9255-ee8c16d3ea4c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1985990, 29)\n"
     ]
    },
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LATITUDE</th>\n",
       "      <th>LONGITUDE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1.972091e+06</td>\n",
       "      <td>1.972091e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>4.071962e+01</td>\n",
       "      <td>-7.391788e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>4.393646e-01</td>\n",
       "      <td>1.228438e+00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>0.000000e+00</td>\n",
       "      <td>-2.013600e+02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>4.066839e+01</td>\n",
       "      <td>-7.397466e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>4.072117e+01</td>\n",
       "      <td>-7.392612e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>4.076998e+01</td>\n",
       "      <td>-7.386540e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>4.334444e+01</td>\n",
       "      <td>0.000000e+00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           LATITUDE     LONGITUDE\n",
       "count  1.972091e+06  1.972091e+06\n",
       "mean   4.071962e+01 -7.391788e+01\n",
       "std    4.393646e-01  1.228438e+00\n",
       "min    0.000000e+00 -2.013600e+02\n",
       "25%    4.066839e+01 -7.397466e+01\n",
       "50%    4.072117e+01 -7.392612e+01\n",
       "75%    4.076998e+01 -7.386540e+01\n",
       "max    4.334444e+01  0.000000e+00"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print(data_filtered.shape)\n",
    "data_filtered[['LATITUDE', 'LONGITUDE']].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "bbc9dd14-26f9-4777-8fe2-71a44c7e34f9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(1985990, 29) (1971716, 29)\n"
     ]
    }
   ],
   "source": [
    "data__strict_filtered = data_filtered[(data_filtered['LATITUDE']>=min(strict_lat)) & (data_filtered['LATITUDE']<=max(strict_lat)) & (data_filtered['LONGITUDE']>=min(strict_lon)) & (data_filtered['LONGITUDE']<=max(strict_lon))]\n",
    "print(data_filtered.shape, data__strict_filtered.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "f1e3bead-f927-4fdf-8b38-2d434844e7d2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(0, 29)\n",
      "(1971716, 29)\n"
     ]
    }
   ],
   "source": [
    "### FILTER data that still does not have a location\n",
    "print(data__strict_filtered[(data__strict_filtered['LOCATION'].isnull() | (data__strict_filtered['LOCATION'] == '(0.0, 0.0)'))].shape)\n",
    "data_zip = data__strict_filtered[~(data__strict_filtered['LOCATION'].isnull() | (data__strict_filtered['LOCATION'] == '(0.0, 0.0)'))]\n",
    "print(data_zip.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "bb46e522-e246-4cf7-bbc7-68ffd42354d1",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LONGITUDE</th>\n",
       "      <th>LATITUDE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1.971716e+06</td>\n",
       "      <td>1.971716e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>-7.391970e+01</td>\n",
       "      <td>4.072420e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>8.724767e-02</td>\n",
       "      <td>7.931909e-02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>-7.425496e+01</td>\n",
       "      <td>4.049895e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>-7.397466e+01</td>\n",
       "      <td>4.066842e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>-7.392614e+01</td>\n",
       "      <td>4.072117e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>-7.386541e+01</td>\n",
       "      <td>4.076999e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>-7.365788e+01</td>\n",
       "      <td>4.094956e+01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "          LONGITUDE      LATITUDE\n",
       "count  1.971716e+06  1.971716e+06\n",
       "mean  -7.391970e+01  4.072420e+01\n",
       "std    8.724767e-02  7.931909e-02\n",
       "min   -7.425496e+01  4.049895e+01\n",
       "25%   -7.397466e+01  4.066842e+01\n",
       "50%   -7.392614e+01  4.072117e+01\n",
       "75%   -7.386541e+01  4.076999e+01\n",
       "max   -7.365788e+01  4.094956e+01"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_zip[['LONGITUDE', 'LATITUDE']].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "0b23f8b8-a0da-4996-82a2-4ee0074e99c2",
   "metadata": {},
   "outputs": [],
   "source": [
    "data_zip.to_csv(\"Midstep.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2e98b518-ff34-43f4-b42d-687139cf2df2",
   "metadata": {},
   "source": [
    "#### Zipcode"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "3f59ba9f-e4df-4715-aed3-25c3cd4f8ee3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 25,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "pattern = r\"^\\(\\-?\\d+.\\d*, -?\\d+.\\d*\\)$\"\n",
    "mask = ~data_zip['LOCATION'].str.match(pattern, na=False)\n",
    "# Everyone matches our string\n",
    "sum(mask)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "727ca449-8930-4c93-889e-5abd316a9e2d",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "# Group by latitude and longitude and aggregate zipcode\n",
    "data_zip_group = data_zip.groupby(['LOCATION'])['ZIP CODE'].agg(lambda x: x.value_counts().index[0] if len(x.value_counts()) > 0  else None)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "4f5b08be-afad-47f3-81ee-f7461905a1a4",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(548028, 29)"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cleaned_zip_data = data_zip.copy()\n",
    "cleaned_zip_data[cleaned_zip_data['ZIP CODE'].isna()].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "2beaa282-414c-49c4-a2d3-8f0084bfd0e8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "count 0\n",
      "Not done 0\n"
     ]
    }
   ],
   "source": [
    "zip_dict = json.load(open(\"zip_dictionary.json\"))\n",
    "count = 0\n",
    "nd_count = 0\n",
    "\n",
    "pattern_zip = re.compile(r'\\b\\d{5}\\b')\n",
    "\n",
    "for idx, row in cleaned_zip_data[cleaned_zip_data['ZIP CODE'].isna()].iterrows():\n",
    "    done = False\n",
    "    if (row['LOCATION'] in data_zip_group.index) and (data_zip_group[row['LOCATION']] is not None):\n",
    "        # Impute with value\n",
    "        cleaned_zip_data.loc[idx, 'ZIP CODE'] = data_zip_group[row['LOCATION']]\n",
    "        done = True\n",
    "    elif row['LOCATION'] in zip_dict.keys():\n",
    "        # Already looked up\n",
    "        cleaned_zip_data.loc[idx, 'ZIP CODE'] = zip_dict[row['LOCATION']]\n",
    "        done = True\n",
    "    else:\n",
    "        try:\n",
    "            # Check with location_dict\n",
    "            if not pd.isna(row['BOROUGH']):\n",
    "                place = str.lower(row['ON STREET NAME'] + \" \" + str(row['BOROUGH']))\n",
    "            else:\n",
    "                place = str.lower(row['ON STREET NAME'] + \" new york\")\n",
    "    \n",
    "            if place in location_dict.keys():\n",
    "                match = pattern_zip.search(location_dict[place]['display_name'])\n",
    "                if match:\n",
    "                    cleaned_zip_data.loc[idx, 'ZIP CODE'] = match.group()\n",
    "                    done = True\n",
    "        except Exception as e:\n",
    "            print(e, \"Could not build place\")\n",
    "\n",
    "    if not done:\n",
    "        ## not a match, reverse lookup\n",
    "        try:\n",
    "            location = geolocator.reverse({row['LATITUDE'], row['LONGITUDE']}, addressdetails=True)\n",
    "            post = location.raw['address']['postcode']\n",
    "            cleaned_zip_data.loc[idx, 'ZIP CODE'] = post\n",
    "            zip_dict[row['LOCATION']] = post\n",
    "            done = True\n",
    "            count += 1\n",
    "        except Exception as e:\n",
    "            print(e, \"Error imputing post\")\n",
    "    if not done:\n",
    "        nd_count += 1\n",
    "\n",
    "print(\"count\", count)\n",
    "print(\"Not done\", nd_count)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "02de8369-1c42-43c2-9ada-d9c88d045a27",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(316467, 29)"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cleaned_zip_data[cleaned_zip_data['ZIP CODE'].isna()].shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "76e3a99e-53c4-4599-9fe9-3ce464f928a8",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LATITUDE</th>\n",
       "      <th>LONGITUDE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1.971716e+06</td>\n",
       "      <td>1.971716e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>4.072420e+01</td>\n",
       "      <td>-7.391970e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>7.931909e-02</td>\n",
       "      <td>8.724767e-02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>4.049895e+01</td>\n",
       "      <td>-7.425496e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>4.066842e+01</td>\n",
       "      <td>-7.397466e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>4.072117e+01</td>\n",
       "      <td>-7.392614e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>4.076999e+01</td>\n",
       "      <td>-7.386541e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>4.094956e+01</td>\n",
       "      <td>-7.365788e+01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           LATITUDE     LONGITUDE\n",
       "count  1.971716e+06  1.971716e+06\n",
       "mean   4.072420e+01 -7.391970e+01\n",
       "std    7.931909e-02  8.724767e-02\n",
       "min    4.049895e+01 -7.425496e+01\n",
       "25%    4.066842e+01 -7.397466e+01\n",
       "50%    4.072117e+01 -7.392614e+01\n",
       "75%    4.076999e+01 -7.386541e+01\n",
       "max    4.094956e+01 -7.365788e+01"
      ]
     },
     "execution_count": 31,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cleaned_zip_data[['LATITUDE', 'LONGITUDE']].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "01c577e9-81b7-4db4-8e19-36151fc6f7f7",
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "225d9000-52df-4041-94b8-780e478f60e9",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "0 316467\n"
     ]
    }
   ],
   "source": [
    "print(len(zip_dict), cleaned_zip_data['ZIP CODE'].isnull().sum())"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "34569928-55ac-4f40-ab0f-55b404f3a786",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "len(json.load(open(\"zip_dictionary.json\")))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "e1f6c018-4c16-4edc-b85b-c567b4bdf4b6",
   "metadata": {},
   "outputs": [],
   "source": [
    "json.dump(zip_dict, open( \"zip_dictionary.json\", 'w' ) )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "81c34fd6-755e-41f0-9960-88d6c617fabd",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "CRASH DATE                             0\n",
       "CRASH TIME                             0\n",
       "BOROUGH                           547756\n",
       "ZIP CODE                          316467\n",
       "LATITUDE                               0\n",
       "LONGITUDE                              0\n",
       "LOCATION                               0\n",
       "ON STREET NAME                    384686\n",
       "CROSS STREET NAME                 692439\n",
       "OFF STREET NAME                  1649105\n",
       "NUMBER OF PERSONS INJURED             16\n",
       "NUMBER OF PERSONS KILLED              29\n",
       "NUMBER OF PEDESTRIANS INJURED          0\n",
       "NUMBER OF PEDESTRIANS KILLED           0\n",
       "NUMBER OF CYCLIST INJURED              0\n",
       "NUMBER OF CYCLIST KILLED               0\n",
       "NUMBER OF MOTORIST INJURED             0\n",
       "NUMBER OF MOTORIST KILLED              0\n",
       "CONTRIBUTING FACTOR VEHICLE 1       6583\n",
       "CONTRIBUTING FACTOR VEHICLE 2     307483\n",
       "CONTRIBUTING FACTOR VEHICLE 3    1833398\n",
       "CONTRIBUTING FACTOR VEHICLE 4    1940381\n",
       "CONTRIBUTING FACTOR VEHICLE 5    1963140\n",
       "COLLISION_ID                           0\n",
       "VEHICLE TYPE CODE 1                13339\n",
       "VEHICLE TYPE CODE 2               380397\n",
       "VEHICLE TYPE CODE 3              1838438\n",
       "VEHICLE TYPE CODE 4              1941472\n",
       "VEHICLE TYPE CODE 5              1963398\n",
       "dtype: int64"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cleaned_zip_data.isna().sum()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "b9fe86fe-68ac-417c-8e55-7a620ab7a42e",
   "metadata": {},
   "outputs": [],
   "source": [
    "cleaned_zip_data.to_csv(\"Midstep.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2e833019-a9c3-4862-a74f-94ece076d04f",
   "metadata": {},
   "source": [
    "#### Finding number of persons killed"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "76cdde0e-0a28-4459-b853-620fbd574581",
   "metadata": {},
   "outputs": [],
   "source": [
    "cleaned_zip_data['NUMBER OF PERSONS INJURED'] = cleaned_zip_data.apply(lambda row: row['NUMBER OF PEDESTRIANS INJURED'] + row['NUMBER OF CYCLIST INJURED'] + row['NUMBER OF MOTORIST INJURED']  if pd.isna(row['NUMBER OF PERSONS INJURED']) else row['NUMBER OF PERSONS INJURED'], axis=1)\n",
    "cleaned_zip_data['NUMBER OF PERSONS KILLED'] = cleaned_zip_data.apply(lambda row: row['NUMBER OF PEDESTRIANS KILLED'] + row['NUMBER OF CYCLIST KILLED'] + row['NUMBER OF MOTORIST KILLED']  if pd.isna(row['NUMBER OF PERSONS KILLED']) else row['NUMBER OF PERSONS KILLED'], axis=1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "11b52e84-f4a1-49ac-b734-14bb50ac9cf6",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CRASH DATE : 0\n",
      "0.0\n",
      "CRASH TIME : 0\n",
      "0.0\n",
      "BOROUGH : 547756\n",
      "27.58100493960191\n",
      "ZIP CODE : 316467\n",
      "15.93497449634691\n",
      "LATITUDE : 0\n",
      "0.0\n",
      "LONGITUDE : 0\n",
      "0.0\n",
      "LOCATION : 0\n",
      "0.0\n",
      "ON STREET NAME : 384686\n",
      "19.36998675723443\n",
      "CROSS STREET NAME : 692439\n",
      "34.86618764444937\n",
      "OFF STREET NAME : 1649105\n",
      "83.03692365016944\n",
      "NUMBER OF PERSONS INJURED : 0\n",
      "0.0\n",
      "NUMBER OF PERSONS KILLED : 0\n",
      "0.0\n",
      "NUMBER OF PEDESTRIANS INJURED : 0\n",
      "0.0\n",
      "NUMBER OF PEDESTRIANS KILLED : 0\n",
      "0.0\n",
      "NUMBER OF CYCLIST INJURED : 0\n",
      "0.0\n",
      "NUMBER OF CYCLIST KILLED : 0\n",
      "0.0\n",
      "NUMBER OF MOTORIST INJURED : 0\n",
      "0.0\n",
      "NUMBER OF MOTORIST KILLED : 0\n",
      "0.0\n",
      "CONTRIBUTING FACTOR VEHICLE 1 : 6583\n",
      "0.33147196108741733\n",
      "CONTRIBUTING FACTOR VEHICLE 2 : 307483\n",
      "15.482605652596439\n",
      "CONTRIBUTING FACTOR VEHICLE 3 : 1833398\n",
      "92.31657762627204\n",
      "CONTRIBUTING FACTOR VEHICLE 4 : 1940381\n",
      "97.70346275661005\n",
      "CONTRIBUTING FACTOR VEHICLE 5 : 1963140\n",
      "98.8494403295082\n",
      "COLLISION_ID : 0\n",
      "0.0\n",
      "VEHICLE TYPE CODE 1 : 13339\n",
      "0.6716549428748383\n",
      "VEHICLE TYPE CODE 2 : 380397\n",
      "19.154023937683473\n",
      "VEHICLE TYPE CODE 3 : 1838438\n",
      "92.57035533915075\n",
      "VEHICLE TYPE CODE 4 : 1941472\n",
      "97.75839757501296\n",
      "VEHICLE TYPE CODE 5 : 1963398\n",
      "98.862431331477\n"
     ]
    }
   ],
   "source": [
    "for col in cleaned_zip_data.columns:\n",
    "    print(col, \":\", sum(cleaned_zip_data[col].isna()))\n",
    "    print(sum(cleaned_zip_data[col].isna())*100/data_filtered.shape[0])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ebf973bd-48a8-413e-b534-17282adacac5",
   "metadata": {},
   "source": [
    "### Sanity checks"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "05e9f64c-e06f-4ca1-bde1-6a5edd2c04d4",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(318845, 29)\n",
      "(59711, 29)\n",
      "(210442, 29)\n",
      "(380934, 29)\n",
      "(454410, 29)\n"
     ]
    }
   ],
   "source": [
    "Checks = {\n",
    "    'Manhattan': (data_filtered['ZIP CODE'] >= 10001) & (data_filtered['ZIP CODE'] <= 10282),\n",
    "    'Staten Island': (data_filtered['ZIP CODE'] >= 10301) & (data_filtered['ZIP CODE'] <= 10314),\n",
    "    'Bronx': (data_filtered['ZIP CODE'] >= 10451) & (data_filtered['ZIP CODE'] <= 10475),\n",
    "    'Queens': ((data_filtered['ZIP CODE'] >= 11004) & (data_filtered['ZIP CODE'] <= 11109)) | ((data_filtered['ZIP CODE'] >= 11351) & (data_filtered['ZIP CODE'] <= 11697)),\n",
    "    'Brooklyn': (data_filtered['ZIP CODE'] >= 11201) & (data_filtered['ZIP CODE'] <= 11256)\n",
    "}\n",
    "\n",
    "for key,value in Checks.items():\n",
    "    issues = data_filtered[value & ~(data_filtered['BOROUGH']==str.capitalize(key))]\n",
    "    print(issues.shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "e778caa2-b66c-416f-97ba-c94876b0ff78",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0.16170939425353348,\n",
       " 0.030283773119455338,\n",
       " 0.10673038104879201,\n",
       " 0.1931992234175713,\n",
       " 0.23046422507095343)"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "318845/ cleaned_zip_data.shape[0], 59711/cleaned_zip_data.shape[0], 210442/cleaned_zip_data.shape[0], 380934/ cleaned_zip_data.shape[0], 454410/cleaned_zip_data.shape[0]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "58b27b13-5aef-4e33-8d87-e8e12ac5a651",
   "metadata": {},
   "outputs": [],
   "source": [
    "saved_cleaned_zip_data = cleaned_zip_data.copy()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "0792d216-c975-468e-b5c8-2434d27e8da8",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "MANHATTAN :  2.653120429108452\n",
      "After cleaning:  0.0\n",
      "STATEN ISLAND :  0.5522600617938892\n",
      "After cleaning:  0.0\n",
      "BRONX :  1.719720284260005\n",
      "After cleaning:  0.0\n",
      "QUEENS :  3.1103363770441583\n",
      "After cleaning:  0.0\n",
      "BROOKLYN :  3.732535517285451\n",
      "After cleaning:  0.0\n"
     ]
    }
   ],
   "source": [
    "Checks = {\n",
    "    'MANHATTAN': (cleaned_zip_data['ZIP CODE'] >= 10001) & (cleaned_zip_data['ZIP CODE'] <= 10282),\n",
    "    'STATEN ISLAND': (cleaned_zip_data['ZIP CODE'] >= 10301) & (cleaned_zip_data['ZIP CODE'] <= 10314),\n",
    "    'BRONX': (cleaned_zip_data['ZIP CODE'] >= 10451) & (cleaned_zip_data['ZIP CODE'] <= 10475),\n",
    "    'QUEENS': ((cleaned_zip_data['ZIP CODE'] >= 11004) & (cleaned_zip_data['ZIP CODE'] <= 11109)) | ((cleaned_zip_data['ZIP CODE'] >= 11351) & (cleaned_zip_data['ZIP CODE'] <= 11697)),\n",
    "    'BROOKLYN': (cleaned_zip_data['ZIP CODE'] >= 11201.0) & (cleaned_zip_data['ZIP CODE'] <= 11256.0)\n",
    "}\n",
    "\n",
    "for key,value in Checks.items():\n",
    "    issues = cleaned_zip_data[value & ~(cleaned_zip_data['BOROUGH']==key)]\n",
    "    print(key, \": \", issues.shape[0]*100/ cleaned_zip_data.shape[0])\n",
    "    if issues.shape[0] > 0:\n",
    "        cleaned_zip_data.loc[value, 'BOROUGH'] = key\n",
    "        issues = cleaned_zip_data[value & ~(cleaned_zip_data['BOROUGH']==key)]\n",
    "        print(\"After cleaning: \", issues.shape[0]*100/ cleaned_zip_data.shape[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "2feaf175-9752-488d-8f99-799abf553996",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "CRASH DATE : 0\n",
      "0.0\n",
      "CRASH TIME : 0\n",
      "0.0\n",
      "BOROUGH : 316327\n",
      "16.043233406839523\n",
      "ZIP CODE : 316467\n",
      "16.050333820895098\n",
      "LATITUDE : 0\n",
      "0.0\n",
      "LONGITUDE : 0\n",
      "0.0\n",
      "LOCATION : 0\n",
      "0.0\n",
      "ON STREET NAME : 384686\n",
      "19.51021343844651\n",
      "CROSS STREET NAME : 692439\n",
      "35.118597201625384\n",
      "OFF STREET NAME : 1649105\n",
      "83.63805943655171\n",
      "NUMBER OF PERSONS INJURED : 0\n",
      "0.0\n",
      "NUMBER OF PERSONS KILLED : 0\n",
      "0.0\n",
      "NUMBER OF PEDESTRIANS INJURED : 0\n",
      "0.0\n",
      "NUMBER OF PEDESTRIANS KILLED : 0\n",
      "0.0\n",
      "NUMBER OF CYCLIST INJURED : 0\n",
      "0.0\n",
      "NUMBER OF CYCLIST KILLED : 0\n",
      "0.0\n",
      "NUMBER OF MOTORIST INJURED : 0\n",
      "0.0\n",
      "NUMBER OF MOTORIST KILLED : 0\n",
      "0.0\n",
      "CONTRIBUTING FACTOR VEHICLE 1 : 6583\n",
      "0.33387161234173685\n",
      "CONTRIBUTING FACTOR VEHICLE 2 : 307483\n",
      "15.594690107500268\n",
      "CONTRIBUTING FACTOR VEHICLE 3 : 1833398\n",
      "92.98489234757947\n",
      "CONTRIBUTING FACTOR VEHICLE 4 : 1940381\n",
      "98.41077518263279\n",
      "CONTRIBUTING FACTOR VEHICLE 5 : 1963140\n",
      "99.56504892185285\n",
      "COLLISION_ID : 0\n",
      "0.0\n",
      "VEHICLE TYPE CODE 1 : 13339\n",
      "0.6765173077664329\n",
      "VEHICLE TYPE CODE 2 : 380397\n",
      "19.29268718212968\n",
      "VEHICLE TYPE CODE 3 : 1838438\n",
      "93.24050725358013\n",
      "VEHICLE TYPE CODE 4 : 1941472\n",
      "98.46610769502301\n",
      "VEHICLE TYPE CODE 5 : 1963398\n",
      "99.5781339706124\n"
     ]
    }
   ],
   "source": [
    "for col in cleaned_zip_data.columns:\n",
    "    print(col, \":\", sum(cleaned_zip_data[col].isna()))\n",
    "    print(sum(cleaned_zip_data[col].isna())*100/cleaned_zip_data.shape[0])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "ffd758c1-5600-4cf6-a1fd-cdbf9ec945b2",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LATITUDE</th>\n",
       "      <th>LONGITUDE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1.971716e+06</td>\n",
       "      <td>1.971716e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>4.072420e+01</td>\n",
       "      <td>-7.391970e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>7.931909e-02</td>\n",
       "      <td>8.724767e-02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>4.049895e+01</td>\n",
       "      <td>-7.425496e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>4.066842e+01</td>\n",
       "      <td>-7.397466e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>4.072117e+01</td>\n",
       "      <td>-7.392614e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>4.076999e+01</td>\n",
       "      <td>-7.386541e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>4.094956e+01</td>\n",
       "      <td>-7.365788e+01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           LATITUDE     LONGITUDE\n",
       "count  1.971716e+06  1.971716e+06\n",
       "mean   4.072420e+01 -7.391970e+01\n",
       "std    7.931909e-02  8.724767e-02\n",
       "min    4.049895e+01 -7.425496e+01\n",
       "25%    4.066842e+01 -7.397466e+01\n",
       "50%    4.072117e+01 -7.392614e+01\n",
       "75%    4.076999e+01 -7.386541e+01\n",
       "max    4.094956e+01 -7.365788e+01"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cleaned_zip_data[['LATITUDE', 'LONGITUDE']].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "id": "41f5dd25-624a-4a58-8ac7-3ced137c6c4b",
   "metadata": {},
   "outputs": [],
   "source": [
    "cleaned_zip_data.to_csv(\"Cleaned_Data.csv\")"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "76365ee8-a0c6-4f66-902b-22f3b2e2b687",
   "metadata": {},
   "source": [
    "### Clean rows where more other injuries/deaths than persons injures/deaths"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "0303faf6-ab50-4774-aef1-130ca02b0a71",
   "metadata": {},
   "outputs": [],
   "source": [
    "cleaned_data = pd.read_csv(\"Cleaned_Data.csv\", index_col=0, parse_dates=['CRASH DATE'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 48,
   "id": "3d23668c-c6cc-4a61-9b23-995e7e102e75",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(4, 29)\n",
      "(165, 29)\n"
     ]
    }
   ],
   "source": [
    "print(cleaned_data[(cleaned_data['NUMBER OF PERSONS KILLED'] ==0)& ((cleaned_data['NUMBER OF MOTORIST KILLED'] > 0)|(cleaned_data['NUMBER OF CYCLIST KILLED'] > 0) | (cleaned_data['NUMBER OF PEDESTRIANS KILLED'] > 0))].shape)\n",
    "print(cleaned_data[(cleaned_data['NUMBER OF PERSONS INJURED'] == 0)& ((cleaned_data['NUMBER OF MOTORIST INJURED'] > 0)|(cleaned_data['NUMBER OF CYCLIST INJURED'] > 0) | (cleaned_data['NUMBER OF PEDESTRIANS INJURED'] > 0))].shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "4c262226-181b-4224-98d7-eb079c357d69",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(0, 29)\n"
     ]
    }
   ],
   "source": [
    "for idx, row in cleaned_data[(cleaned_data['NUMBER OF PERSONS KILLED'] ==0)& ((cleaned_data['NUMBER OF MOTORIST KILLED'] > 0)|(cleaned_data['NUMBER OF CYCLIST KILLED'] > 0) | (cleaned_data['NUMBER OF PEDESTRIANS KILLED'] > 0))].iterrows():\n",
    "    cleaned_data.loc[idx, 'NUMBER OF PERSONS KILLED'] = row['NUMBER OF CYCLIST KILLED'] + row['NUMBER OF PEDESTRIANS KILLED'] + row['NUMBER OF MOTORIST KILLED']\n",
    "\n",
    "print(cleaned_data[(cleaned_data['NUMBER OF PERSONS KILLED'] ==0)& ((cleaned_data['NUMBER OF MOTORIST KILLED'] > 0)|(cleaned_data['NUMBER OF CYCLIST KILLED'] > 0) | (cleaned_data['NUMBER OF PEDESTRIANS KILLED'] > 0))].shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "8ebed9e0-2630-4786-8407-3d952b268338",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(0, 29)\n"
     ]
    }
   ],
   "source": [
    "for idx, row in cleaned_data[(cleaned_data['NUMBER OF PERSONS INJURED'] ==0)& ((cleaned_data['NUMBER OF MOTORIST INJURED'] > 0)|(cleaned_data['NUMBER OF CYCLIST INJURED'] > 0) | (cleaned_data['NUMBER OF PEDESTRIANS INJURED'] > 0))].iterrows():\n",
    "    cleaned_data.loc[idx, 'NUMBER OF PERSONS INJURED'] = row['NUMBER OF CYCLIST INJURED'] + row['NUMBER OF PEDESTRIANS INJURED'] + row['NUMBER OF MOTORIST INJURED']\n",
    "\n",
    "print(cleaned_data[(cleaned_data['NUMBER OF PERSONS INJURED'] ==0)& ((cleaned_data['NUMBER OF MOTORIST INJURED'] > 0)|(cleaned_data['NUMBER OF CYCLIST INJURED'] > 0) | (cleaned_data['NUMBER OF PEDESTRIANS INJURED'] > 0))].shape)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "af50f74d-7861-4b19-b4e6-b1eae82dc8b9",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>LATITUDE</th>\n",
       "      <th>LONGITUDE</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>count</th>\n",
       "      <td>1.971716e+06</td>\n",
       "      <td>1.971716e+06</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>mean</th>\n",
       "      <td>4.072420e+01</td>\n",
       "      <td>-7.391970e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>std</th>\n",
       "      <td>7.931909e-02</td>\n",
       "      <td>8.724767e-02</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>min</th>\n",
       "      <td>4.049895e+01</td>\n",
       "      <td>-7.425496e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25%</th>\n",
       "      <td>4.066842e+01</td>\n",
       "      <td>-7.397466e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50%</th>\n",
       "      <td>4.072117e+01</td>\n",
       "      <td>-7.392614e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>75%</th>\n",
       "      <td>4.076999e+01</td>\n",
       "      <td>-7.386541e+01</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>max</th>\n",
       "      <td>4.094956e+01</td>\n",
       "      <td>-7.365788e+01</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "           LATITUDE     LONGITUDE\n",
       "count  1.971716e+06  1.971716e+06\n",
       "mean   4.072420e+01 -7.391970e+01\n",
       "std    7.931909e-02  8.724767e-02\n",
       "min    4.049895e+01 -7.425496e+01\n",
       "25%    4.066842e+01 -7.397466e+01\n",
       "50%    4.072117e+01 -7.392614e+01\n",
       "75%    4.076999e+01 -7.386541e+01\n",
       "max    4.094956e+01 -7.365788e+01"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "cleaned_data[['LATITUDE', 'LONGITUDE']].describe()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "e3498b8f-0c1b-4b94-8456-931e3362dca1",
   "metadata": {},
   "outputs": [],
   "source": [
    "cleaned_data.to_csv(\"Cleaned_Data.csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 53,
   "id": "d2c1d923-cd29-4729-b30e-14de3ba727fa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>CRASH DATE</th>\n",
       "      <th>CRASH TIME</th>\n",
       "      <th>BOROUGH</th>\n",
       "      <th>ZIP CODE</th>\n",
       "      <th>LATITUDE</th>\n",
       "      <th>LONGITUDE</th>\n",
       "      <th>LOCATION</th>\n",
       "      <th>ON STREET NAME</th>\n",
       "      <th>CROSS STREET NAME</th>\n",
       "      <th>OFF STREET NAME</th>\n",
       "      <th>...</th>\n",
       "      <th>CONTRIBUTING FACTOR VEHICLE 2</th>\n",
       "      <th>CONTRIBUTING FACTOR VEHICLE 3</th>\n",
       "      <th>CONTRIBUTING FACTOR VEHICLE 4</th>\n",
       "      <th>CONTRIBUTING FACTOR VEHICLE 5</th>\n",
       "      <th>COLLISION_ID</th>\n",
       "      <th>VEHICLE TYPE CODE 1</th>\n",
       "      <th>VEHICLE TYPE CODE 2</th>\n",
       "      <th>VEHICLE TYPE CODE 3</th>\n",
       "      <th>VEHICLE TYPE CODE 4</th>\n",
       "      <th>VEHICLE TYPE CODE 5</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2021-09-11</td>\n",
       "      <td>2:39</td>\n",
       "      <td>QUEENS</td>\n",
       "      <td>11104.0</td>\n",
       "      <td>40.674000</td>\n",
       "      <td>-73.872100</td>\n",
       "      <td>(40.674, -73.8721)</td>\n",
       "      <td>WHITESTONE EXPRESSWAY</td>\n",
       "      <td>20 AVENUE</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>Unspecified</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4455765</td>\n",
       "      <td>Sedan</td>\n",
       "      <td>Sedan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2021-09-11</td>\n",
       "      <td>9:35</td>\n",
       "      <td>BROOKLYN</td>\n",
       "      <td>11208.0</td>\n",
       "      <td>40.667202</td>\n",
       "      <td>-73.866500</td>\n",
       "      <td>(40.667202, -73.8665)</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>1211      LORING AVENUE</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4456314</td>\n",
       "      <td>Sedan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2021-12-14</td>\n",
       "      <td>8:13</td>\n",
       "      <td>BROOKLYN</td>\n",
       "      <td>11233.0</td>\n",
       "      <td>40.683304</td>\n",
       "      <td>-73.917274</td>\n",
       "      <td>(40.683304, -73.917274)</td>\n",
       "      <td>SARATOGA AVENUE</td>\n",
       "      <td>DECATUR STREET</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4486609</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>2021-12-14</td>\n",
       "      <td>17:05</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>40.709183</td>\n",
       "      <td>-73.956825</td>\n",
       "      <td>(40.709183, -73.956825)</td>\n",
       "      <td>BROOKLYN QUEENS EXPRESSWAY</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>Unspecified</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4486555</td>\n",
       "      <td>Sedan</td>\n",
       "      <td>Tractor Truck Diesel</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>2021-12-14</td>\n",
       "      <td>8:17</td>\n",
       "      <td>BRONX</td>\n",
       "      <td>10475.0</td>\n",
       "      <td>40.868160</td>\n",
       "      <td>-73.831480</td>\n",
       "      <td>(40.86816, -73.83148)</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>344       BAYCHESTER AVENUE</td>\n",
       "      <td>...</td>\n",
       "      <td>Unspecified</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4486660</td>\n",
       "      <td>Sedan</td>\n",
       "      <td>Sedan</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows Ã— 29 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "  CRASH DATE CRASH TIME   BOROUGH  ZIP CODE   LATITUDE  LONGITUDE  \\\n",
       "0 2021-09-11       2:39    QUEENS   11104.0  40.674000 -73.872100   \n",
       "3 2021-09-11       9:35  BROOKLYN   11208.0  40.667202 -73.866500   \n",
       "4 2021-12-14       8:13  BROOKLYN   11233.0  40.683304 -73.917274   \n",
       "6 2021-12-14      17:05       NaN       NaN  40.709183 -73.956825   \n",
       "7 2021-12-14       8:17     BRONX   10475.0  40.868160 -73.831480   \n",
       "\n",
       "                  LOCATION              ON STREET NAME CROSS STREET NAME  \\\n",
       "0       (40.674, -73.8721)       WHITESTONE EXPRESSWAY         20 AVENUE   \n",
       "3    (40.667202, -73.8665)                         NaN               NaN   \n",
       "4  (40.683304, -73.917274)             SARATOGA AVENUE    DECATUR STREET   \n",
       "6  (40.709183, -73.956825)  BROOKLYN QUEENS EXPRESSWAY               NaN   \n",
       "7    (40.86816, -73.83148)                         NaN               NaN   \n",
       "\n",
       "               OFF STREET NAME  ...  CONTRIBUTING FACTOR VEHICLE 2  \\\n",
       "0                          NaN  ...                    Unspecified   \n",
       "3      1211      LORING AVENUE  ...                            NaN   \n",
       "4                          NaN  ...                            NaN   \n",
       "6                          NaN  ...                    Unspecified   \n",
       "7  344       BAYCHESTER AVENUE  ...                    Unspecified   \n",
       "\n",
       "   CONTRIBUTING FACTOR VEHICLE 3  CONTRIBUTING FACTOR VEHICLE 4  \\\n",
       "0                            NaN                            NaN   \n",
       "3                            NaN                            NaN   \n",
       "4                            NaN                            NaN   \n",
       "6                            NaN                            NaN   \n",
       "7                            NaN                            NaN   \n",
       "\n",
       "   CONTRIBUTING FACTOR VEHICLE 5  COLLISION_ID  VEHICLE TYPE CODE 1  \\\n",
       "0                            NaN       4455765                Sedan   \n",
       "3                            NaN       4456314                Sedan   \n",
       "4                            NaN       4486609                  NaN   \n",
       "6                            NaN       4486555                Sedan   \n",
       "7                            NaN       4486660                Sedan   \n",
       "\n",
       "    VEHICLE TYPE CODE 2  VEHICLE TYPE CODE 3 VEHICLE TYPE CODE 4  \\\n",
       "0                 Sedan                  NaN                 NaN   \n",
       "3                   NaN                  NaN                 NaN   \n",
       "4                   NaN                  NaN                 NaN   \n",
       "6  Tractor Truck Diesel                  NaN                 NaN   \n",
       "7                 Sedan                  NaN                 NaN   \n",
       "\n",
       "  VEHICLE TYPE CODE 5  \n",
       "0                 NaN  \n",
       "3                 NaN  \n",
       "4                 NaN  \n",
       "6                 NaN  \n",
       "7                 NaN  \n",
       "\n",
       "[5 rows x 29 columns]"
      ]
     },
     "execution_count": 53,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = pd.read_csv(\"Cleaned_Data.csv\", index_col = 0, parse_dates=['CRASH DATE'])\n",
    "data.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 55,
   "id": "50416e12-c984-4336-ac46-de0fabab3f0c",
   "metadata": {},
   "outputs": [],
   "source": [
    "data['YEAR'] = data['CRASH DATE'].dt.year"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 56,
   "id": "d8b342ed-2722-43d1-8ec2-3dbad0a28c13",
   "metadata": {
    "scrolled": true
   },
   "outputs": [],
   "source": [
    "for year in data['YEAR'].unique():\n",
    "    yr_data = data[data['YEAR']==year]\n",
    "    yr_data.to_csv(\"Cleaned Data/Cleaned_for_\"+str(year)+\".csv\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 59,
   "id": "12a2f3cd-5f10-44f1-b2e6-07ecb7044795",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 640x480 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "for year in data['YEAR'].unique():\n",
    "    yr_data = data[data['YEAR']==year]\n",
    "    plt.scatter(yr_data['LATITUDE'], yr_data['LONGITUDE'])\n",
    "    plt.show()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
